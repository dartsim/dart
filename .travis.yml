language: cpp

sudo: required

dist: trusty

cache:
  apt: true

matrix:
  include:
    - os: linux
      compiler: gcc
      env:
        - BUILD_NAME=TRUSTY_DEBUG
        - SUDO=sudo
        - BUILD_TYPE=Debug
        - COMPILER=GCC
        - BUILD_ONLY_ON_PULL_REQUEST=ON
    - os: linux
      compiler: gcc
      env:
        - BUILD_NAME=TRUSTY_RELEASE
        - SUDO=sudo
        - BUILD_TYPE=Release
        - COMPILER=GCC
    - os: linux
      env:
        - BUILD_NAME=XENIAL_DEBUG
        - DOCKER_FILE="ubuntu-xenial"
        - BUILD_TYPE=Debug
        - COMPILER=GCC
      services: docker
    - os: linux
      env:
        - BUILD_NAME=XENIAL_RELEASE
        - DOCKER_FILE="ubuntu-xenial"
        - BUILD_TYPE=Release
        - COMPILER=GCC
      services: docker
    - os: linux
      env:
        - BUILD_NAME=BIONIC_DEBUG
        - DOCKER_FILE="ubuntu-bionic"
        - BUILD_TYPE=Debug
        - COMPILER=GCC
      services: docker
    - os: linux
      env:
        - BUILD_NAME=BIONIC_RELEASE
        - DOCKER_FILE="ubuntu-bionic"
        - BUILD_TYPE=Release
        - COMPILER=GCC
      services: docker
    - os: linux
      env:
        - BUILD_NAME=COSMIC_DEBUG
        - DOCKER_FILE="ubuntu-cosmic"
        - BUILD_TYPE=Debug
        - COMPILER=GCC
      services: docker
    - os: linux
      env:
        - BUILD_NAME=COSMIC_RELEASE
        - DOCKER_FILE="ubuntu-cosmic"
        - BUILD_TYPE=Release
        - COMPILER=GCC
      services: docker
    - os: osx
      osx_image: xcode9.4
      compiler: clang
      env:
        - BUILD_NAME=XCODE94_DEBUG
        - BUILD_TYPE=Debug
        - COMPILER=CLANG
    - os: osx
      osx_image: xcode9.4
      compiler: clang
      env:
        - BUILD_NAME=XCODE94_RELEASE
        - BUILD_TYPE=Release
        - COMPILER=CLANG
    - os: linux
      compiler: gcc
      env:
        - BUILD_NAME=DOCS
        - SUDO=sudo
        - BUILD_TYPE=Release
        - COMPILER=GCC

install:
  - if [ -n "$DOCKER_FILE" ]; then
      docker build -t "$DOCKER_FILE" -f ".ci/docker/$DOCKER_FILE" .;
      docker run -itd -v $TRAVIS_BUILD_DIR:$TRAVIS_BUILD_DIR --env-file .ci/env.list --name dart-docker "$DOCKER_FILE";
    else
      '.ci/install.sh';
    fi

script:
  - if [ -n "$DOCKER_FILE" ]; then
      docker exec dart-docker /bin/sh -c "cd $TRAVIS_BUILD_DIR && ./.ci/script.sh";
    else
      '.ci/script.sh';
    fi

after_failure:
  - cat build/Testing/Temporary/LastTest.log
  - cat build/Testing/Temporary/LastTestsFailed.log

deploy:
  github-token: $GITHUB_TOKEN
  provider: pages
  skip-cleanup: true
  local-dir: gh-pages
  keep-history: false
  verbose: true
  on:
    branch: master
    condition: $BUILD_NAME == DOCS && $TRAVIS_EVENT_TYPE != cron

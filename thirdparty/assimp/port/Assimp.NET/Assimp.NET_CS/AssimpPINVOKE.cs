/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

class AssimpPINVOKE {

  protected class SWIGExceptionHelper {

    public delegate void ExceptionDelegate(string message);
    public delegate void ExceptionArgumentDelegate(string message, string paramName);

    static ExceptionDelegate applicationDelegate = new ExceptionDelegate(SetPendingApplicationException);
    static ExceptionDelegate arithmeticDelegate = new ExceptionDelegate(SetPendingArithmeticException);
    static ExceptionDelegate divideByZeroDelegate = new ExceptionDelegate(SetPendingDivideByZeroException);
    static ExceptionDelegate indexOutOfRangeDelegate = new ExceptionDelegate(SetPendingIndexOutOfRangeException);
    static ExceptionDelegate invalidCastDelegate = new ExceptionDelegate(SetPendingInvalidCastException);
    static ExceptionDelegate invalidOperationDelegate = new ExceptionDelegate(SetPendingInvalidOperationException);
    static ExceptionDelegate ioDelegate = new ExceptionDelegate(SetPendingIOException);
    static ExceptionDelegate nullReferenceDelegate = new ExceptionDelegate(SetPendingNullReferenceException);
    static ExceptionDelegate outOfMemoryDelegate = new ExceptionDelegate(SetPendingOutOfMemoryException);
    static ExceptionDelegate overflowDelegate = new ExceptionDelegate(SetPendingOverflowException);
    static ExceptionDelegate systemDelegate = new ExceptionDelegate(SetPendingSystemException);

    static ExceptionArgumentDelegate argumentDelegate = new ExceptionArgumentDelegate(SetPendingArgumentException);
    static ExceptionArgumentDelegate argumentNullDelegate = new ExceptionArgumentDelegate(SetPendingArgumentNullException);
    static ExceptionArgumentDelegate argumentOutOfRangeDelegate = new ExceptionArgumentDelegate(SetPendingArgumentOutOfRangeException);

    [DllImport("Assimp", EntryPoint="SWIGRegisterExceptionCallbacks_Assimp")]
    public static extern void SWIGRegisterExceptionCallbacks_Assimp(
                                ExceptionDelegate applicationDelegate,
                                ExceptionDelegate arithmeticDelegate,
                                ExceptionDelegate divideByZeroDelegate, 
                                ExceptionDelegate indexOutOfRangeDelegate, 
                                ExceptionDelegate invalidCastDelegate,
                                ExceptionDelegate invalidOperationDelegate,
                                ExceptionDelegate ioDelegate,
                                ExceptionDelegate nullReferenceDelegate,
                                ExceptionDelegate outOfMemoryDelegate, 
                                ExceptionDelegate overflowDelegate, 
                                ExceptionDelegate systemExceptionDelegate);

    [DllImport("Assimp", EntryPoint="SWIGRegisterExceptionArgumentCallbacks_Assimp")]
    public static extern void SWIGRegisterExceptionCallbacksArgument_Assimp(
                                ExceptionArgumentDelegate argumentDelegate,
                                ExceptionArgumentDelegate argumentNullDelegate,
                                ExceptionArgumentDelegate argumentOutOfRangeDelegate);

    static void SetPendingApplicationException(string message) {
      SWIGPendingException.Set(new System.ApplicationException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingArithmeticException(string message) {
      SWIGPendingException.Set(new System.ArithmeticException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingDivideByZeroException(string message) {
      SWIGPendingException.Set(new System.DivideByZeroException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingIndexOutOfRangeException(string message) {
      SWIGPendingException.Set(new System.IndexOutOfRangeException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingInvalidCastException(string message) {
      SWIGPendingException.Set(new System.InvalidCastException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingInvalidOperationException(string message) {
      SWIGPendingException.Set(new System.InvalidOperationException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingIOException(string message) {
      SWIGPendingException.Set(new System.IO.IOException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingNullReferenceException(string message) {
      SWIGPendingException.Set(new System.NullReferenceException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingOutOfMemoryException(string message) {
      SWIGPendingException.Set(new System.OutOfMemoryException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingOverflowException(string message) {
      SWIGPendingException.Set(new System.OverflowException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingSystemException(string message) {
      SWIGPendingException.Set(new System.SystemException(message, SWIGPendingException.Retrieve()));
    }

    static void SetPendingArgumentException(string message, string paramName) {
      SWIGPendingException.Set(new System.ArgumentException(message, paramName, SWIGPendingException.Retrieve()));
    }
    static void SetPendingArgumentNullException(string message, string paramName) {
      Exception e = SWIGPendingException.Retrieve();
      if (e != null) message = message + " Inner Exception: " + e.Message;
      SWIGPendingException.Set(new System.ArgumentNullException(paramName, message));
    }
    static void SetPendingArgumentOutOfRangeException(string message, string paramName) {
      Exception e = SWIGPendingException.Retrieve();
      if (e != null) message = message + " Inner Exception: " + e.Message;
      SWIGPendingException.Set(new System.ArgumentOutOfRangeException(paramName, message));
    }

    static SWIGExceptionHelper() {
      SWIGRegisterExceptionCallbacks_Assimp(
                                applicationDelegate,
                                arithmeticDelegate,
                                divideByZeroDelegate,
                                indexOutOfRangeDelegate,
                                invalidCastDelegate,
                                invalidOperationDelegate,
                                ioDelegate,
                                nullReferenceDelegate,
                                outOfMemoryDelegate,
                                overflowDelegate,
                                systemDelegate);

      SWIGRegisterExceptionCallbacksArgument_Assimp(
                                argumentDelegate,
                                argumentNullDelegate,
                                argumentOutOfRangeDelegate);
    }
  }

  protected static SWIGExceptionHelper swigExceptionHelper = new SWIGExceptionHelper();

  public class SWIGPendingException {
    [ThreadStatic]
    private static Exception pendingException = null;
    private static int numExceptionsPending = 0;

    public static bool Pending {
      get {
        bool pending = false;
        if (numExceptionsPending > 0)
          if (pendingException != null)
            pending = true;
        return pending;
      } 
    }

    public static void Set(Exception e) {
      if (pendingException != null)
        throw new ApplicationException("FATAL: An earlier pending exception from unmanaged code was missed and thus not thrown (" + pendingException.ToString() + ")", e);
      pendingException = e;
      lock(typeof(AssimpPINVOKE)) {
        numExceptionsPending++;
      }
    }

    public static Exception Retrieve() {
      Exception e = null;
      if (numExceptionsPending > 0) {
        if (pendingException != null) {
          e = pendingException;
          pendingException = null;
          lock(typeof(AssimpPINVOKE)) {
            numExceptionsPending--;
          }
        }
      }
      return e;
    }
  }


  protected class SWIGStringHelper {

    public delegate string SWIGStringDelegate(string message);
    static SWIGStringDelegate stringDelegate = new SWIGStringDelegate(CreateString);

    [DllImport("Assimp", EntryPoint="SWIGRegisterStringCallback_Assimp")]
    public static extern void SWIGRegisterStringCallback_Assimp(SWIGStringDelegate stringDelegate);

    static string CreateString(string cString) {
      return cString;
    }

    static SWIGStringHelper() {
      SWIGRegisterStringCallback_Assimp(stringDelegate);
    }
  }

  static protected SWIGStringHelper swigStringHelper = new SWIGStringHelper();


  static AssimpPINVOKE() {
  }


  [DllImport("Assimp", EntryPoint="CSharp_AI_MATH_PI_get")]
  public static extern double AI_MATH_PI_get();

  [DllImport("Assimp", EntryPoint="CSharp_AI_MATH_TWO_PI_get")]
  public static extern double AI_MATH_TWO_PI_get();

  [DllImport("Assimp", EntryPoint="CSharp_AI_MATH_HALF_PI_get")]
  public static extern double AI_MATH_HALF_PI_get();

  [DllImport("Assimp", EntryPoint="CSharp_AI_MATH_PI_F_get")]
  public static extern double AI_MATH_PI_F_get();

  [DllImport("Assimp", EntryPoint="CSharp_AI_MATH_TWO_PI_F_get")]
  public static extern double AI_MATH_TWO_PI_F_get();

  [DllImport("Assimp", EntryPoint="CSharp_AI_MATH_HALF_PI_F_get")]
  public static extern double AI_MATH_HALF_PI_F_get();

  [DllImport("Assimp", EntryPoint="CSharp_AI_CONFIG_GLOB_MEASURE_TIME_get")]
  public static extern string AI_CONFIG_GLOB_MEASURE_TIME_get();

  [DllImport("Assimp", EntryPoint="CSharp_AI_CONFIG_PP_CT_MAX_SMOOTHING_ANGLE_get")]
  public static extern string AI_CONFIG_PP_CT_MAX_SMOOTHING_ANGLE_get();

  [DllImport("Assimp", EntryPoint="CSharp_AI_CONFIG_PP_GSN_MAX_SMOOTHING_ANGLE_get")]
  public static extern string AI_CONFIG_PP_GSN_MAX_SMOOTHING_ANGLE_get();

  [DllImport("Assimp", EntryPoint="CSharp_AI_CONFIG_IMPORT_MDL_COLORMAP_get")]
  public static extern string AI_CONFIG_IMPORT_MDL_COLORMAP_get();

  [DllImport("Assimp", EntryPoint="CSharp_AI_CONFIG_PP_RRM_EXCLUDE_LIST_get")]
  public static extern string AI_CONFIG_PP_RRM_EXCLUDE_LIST_get();

  [DllImport("Assimp", EntryPoint="CSharp_AI_CONFIG_PP_PTV_KEEP_HIERARCHY_get")]
  public static extern string AI_CONFIG_PP_PTV_KEEP_HIERARCHY_get();

  [DllImport("Assimp", EntryPoint="CSharp_AI_CONFIG_PP_PTV_NORMALIZE_get")]
  public static extern string AI_CONFIG_PP_PTV_NORMALIZE_get();

  [DllImport("Assimp", EntryPoint="CSharp_AI_CONFIG_PP_FD_REMOVE_get")]
  public static extern string AI_CONFIG_PP_FD_REMOVE_get();

  [DllImport("Assimp", EntryPoint="CSharp_AI_CONFIG_PP_OG_EXCLUDE_LIST_get")]
  public static extern string AI_CONFIG_PP_OG_EXCLUDE_LIST_get();

  [DllImport("Assimp", EntryPoint="CSharp_AI_CONFIG_PP_SLM_TRIANGLE_LIMIT_get")]
  public static extern string AI_CONFIG_PP_SLM_TRIANGLE_LIMIT_get();

  [DllImport("Assimp", EntryPoint="CSharp_AI_SLM_DEFAULT_MAX_TRIANGLES_get")]
  public static extern int AI_SLM_DEFAULT_MAX_TRIANGLES_get();

  [DllImport("Assimp", EntryPoint="CSharp_AI_CONFIG_PP_SLM_VERTEX_LIMIT_get")]
  public static extern string AI_CONFIG_PP_SLM_VERTEX_LIMIT_get();

  [DllImport("Assimp", EntryPoint="CSharp_AI_SLM_DEFAULT_MAX_VERTICES_get")]
  public static extern int AI_SLM_DEFAULT_MAX_VERTICES_get();

  [DllImport("Assimp", EntryPoint="CSharp_AI_CONFIG_PP_LBW_MAX_WEIGHTS_get")]
  public static extern string AI_CONFIG_PP_LBW_MAX_WEIGHTS_get();

  [DllImport("Assimp", EntryPoint="CSharp_AI_LMW_MAX_WEIGHTS_get")]
  public static extern int AI_LMW_MAX_WEIGHTS_get();

  [DllImport("Assimp", EntryPoint="CSharp_PP_ICL_PTCACHE_SIZE_get")]
  public static extern int PP_ICL_PTCACHE_SIZE_get();

  [DllImport("Assimp", EntryPoint="CSharp_AI_CONFIG_PP_ICL_PTCACHE_SIZE_get")]
  public static extern string AI_CONFIG_PP_ICL_PTCACHE_SIZE_get();

  [DllImport("Assimp", EntryPoint="CSharp_AI_CONFIG_PP_RVC_FLAGS_get")]
  public static extern string AI_CONFIG_PP_RVC_FLAGS_get();

  [DllImport("Assimp", EntryPoint="CSharp_AI_CONFIG_PP_SBP_REMOVE_get")]
  public static extern string AI_CONFIG_PP_SBP_REMOVE_get();

  [DllImport("Assimp", EntryPoint="CSharp_AI_CONFIG_PP_FID_ANIM_ACCURACY_get")]
  public static extern string AI_CONFIG_PP_FID_ANIM_ACCURACY_get();

  [DllImport("Assimp", EntryPoint="CSharp_AI_UVTRAFO_SCALING_get")]
  public static extern int AI_UVTRAFO_SCALING_get();

  [DllImport("Assimp", EntryPoint="CSharp_AI_UVTRAFO_ROTATION_get")]
  public static extern int AI_UVTRAFO_ROTATION_get();

  [DllImport("Assimp", EntryPoint="CSharp_AI_UVTRAFO_TRANSLATION_get")]
  public static extern int AI_UVTRAFO_TRANSLATION_get();

  [DllImport("Assimp", EntryPoint="CSharp_AI_UVTRAFO_ALL_get")]
  public static extern int AI_UVTRAFO_ALL_get();

  [DllImport("Assimp", EntryPoint="CSharp_AI_CONFIG_PP_TUV_EVALUATE_get")]
  public static extern string AI_CONFIG_PP_TUV_EVALUATE_get();

  [DllImport("Assimp", EntryPoint="CSharp_AI_CONFIG_FAVOUR_SPEED_get")]
  public static extern string AI_CONFIG_FAVOUR_SPEED_get();

  [DllImport("Assimp", EntryPoint="CSharp_AI_CONFIG_IMPORT_GLOBAL_KEYFRAME_get")]
  public static extern string AI_CONFIG_IMPORT_GLOBAL_KEYFRAME_get();

  [DllImport("Assimp", EntryPoint="CSharp_AI_CONFIG_IMPORT_MD3_KEYFRAME_get")]
  public static extern string AI_CONFIG_IMPORT_MD3_KEYFRAME_get();

  [DllImport("Assimp", EntryPoint="CSharp_AI_CONFIG_IMPORT_MD2_KEYFRAME_get")]
  public static extern string AI_CONFIG_IMPORT_MD2_KEYFRAME_get();

  [DllImport("Assimp", EntryPoint="CSharp_AI_CONFIG_IMPORT_MDL_KEYFRAME_get")]
  public static extern string AI_CONFIG_IMPORT_MDL_KEYFRAME_get();

  [DllImport("Assimp", EntryPoint="CSharp_AI_CONFIG_IMPORT_MDC_KEYFRAME_get")]
  public static extern string AI_CONFIG_IMPORT_MDC_KEYFRAME_get();

  [DllImport("Assimp", EntryPoint="CSharp_AI_CONFIG_IMPORT_SMD_KEYFRAME_get")]
  public static extern string AI_CONFIG_IMPORT_SMD_KEYFRAME_get();

  [DllImport("Assimp", EntryPoint="CSharp_AI_CONFIG_IMPORT_UNREAL_KEYFRAME_get")]
  public static extern string AI_CONFIG_IMPORT_UNREAL_KEYFRAME_get();

  [DllImport("Assimp", EntryPoint="CSharp_AI_CONFIG_IMPORT_AC_SEPARATE_BFCULL_get")]
  public static extern string AI_CONFIG_IMPORT_AC_SEPARATE_BFCULL_get();

  [DllImport("Assimp", EntryPoint="CSharp_AI_CONFIG_IMPORT_AC_EVAL_SUBDIVISION_get")]
  public static extern string AI_CONFIG_IMPORT_AC_EVAL_SUBDIVISION_get();

  [DllImport("Assimp", EntryPoint="CSharp_AI_CONFIG_IMPORT_UNREAL_HANDLE_FLAGS_get")]
  public static extern string AI_CONFIG_IMPORT_UNREAL_HANDLE_FLAGS_get();

  [DllImport("Assimp", EntryPoint="CSharp_AI_CONFIG_IMPORT_TER_MAKE_UVS_get")]
  public static extern string AI_CONFIG_IMPORT_TER_MAKE_UVS_get();

  [DllImport("Assimp", EntryPoint="CSharp_AI_CONFIG_IMPORT_ASE_RECONSTRUCT_NORMALS_get")]
  public static extern string AI_CONFIG_IMPORT_ASE_RECONSTRUCT_NORMALS_get();

  [DllImport("Assimp", EntryPoint="CSharp_AI_CONFIG_IMPORT_MD3_HANDLE_MULTIPART_get")]
  public static extern string AI_CONFIG_IMPORT_MD3_HANDLE_MULTIPART_get();

  [DllImport("Assimp", EntryPoint="CSharp_AI_CONFIG_IMPORT_MD3_SKIN_NAME_get")]
  public static extern string AI_CONFIG_IMPORT_MD3_SKIN_NAME_get();

  [DllImport("Assimp", EntryPoint="CSharp_AI_CONFIG_IMPORT_MD3_SHADER_SRC_get")]
  public static extern string AI_CONFIG_IMPORT_MD3_SHADER_SRC_get();

  [DllImport("Assimp", EntryPoint="CSharp_AI_CONFIG_IMPORT_LWO_ONE_LAYER_ONLY_get")]
  public static extern string AI_CONFIG_IMPORT_LWO_ONE_LAYER_ONLY_get();

  [DllImport("Assimp", EntryPoint="CSharp_AI_CONFIG_IMPORT_MD5_NO_ANIM_AUTOLOAD_get")]
  public static extern string AI_CONFIG_IMPORT_MD5_NO_ANIM_AUTOLOAD_get();

  [DllImport("Assimp", EntryPoint="CSharp_AI_CONFIG_IMPORT_LWS_ANIM_START_get")]
  public static extern string AI_CONFIG_IMPORT_LWS_ANIM_START_get();

  [DllImport("Assimp", EntryPoint="CSharp_AI_CONFIG_IMPORT_LWS_ANIM_END_get")]
  public static extern string AI_CONFIG_IMPORT_LWS_ANIM_END_get();

  [DllImport("Assimp", EntryPoint="CSharp_AI_CONFIG_IMPORT_IRR_ANIM_FPS_get")]
  public static extern string AI_CONFIG_IMPORT_IRR_ANIM_FPS_get();

  [DllImport("Assimp", EntryPoint="CSharp_AI_CONFIG_IMPORT_OGRE_MATERIAL_FILE_get")]
  public static extern string AI_CONFIG_IMPORT_OGRE_MATERIAL_FILE_get();

  [DllImport("Assimp", EntryPoint="CSharp_MAXLEN_get")]
  public static extern uint MAXLEN_get();

  [DllImport("Assimp", EntryPoint="CSharp_new_aiPlane__SWIG_0")]
  public static extern IntPtr new_aiPlane__SWIG_0();

  [DllImport("Assimp", EntryPoint="CSharp_new_aiPlane__SWIG_1")]
  public static extern IntPtr new_aiPlane__SWIG_1(float jarg1, float jarg2, float jarg3, float jarg4);

  [DllImport("Assimp", EntryPoint="CSharp_new_aiPlane__SWIG_2")]
  public static extern IntPtr new_aiPlane__SWIG_2(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiPlane_a_set")]
  public static extern void aiPlane_a_set(HandleRef jarg1, float jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiPlane_a_get")]
  public static extern float aiPlane_a_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiPlane_b_set")]
  public static extern void aiPlane_b_set(HandleRef jarg1, float jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiPlane_b_get")]
  public static extern float aiPlane_b_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiPlane_c_set")]
  public static extern void aiPlane_c_set(HandleRef jarg1, float jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiPlane_c_get")]
  public static extern float aiPlane_c_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiPlane_d_set")]
  public static extern void aiPlane_d_set(HandleRef jarg1, float jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiPlane_d_get")]
  public static extern float aiPlane_d_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_delete_aiPlane")]
  public static extern void delete_aiPlane(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_new_aiRay__SWIG_0")]
  public static extern IntPtr new_aiRay__SWIG_0();

  [DllImport("Assimp", EntryPoint="CSharp_new_aiRay__SWIG_1")]
  public static extern IntPtr new_aiRay__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_new_aiRay__SWIG_2")]
  public static extern IntPtr new_aiRay__SWIG_2(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiRay_pos_set")]
  public static extern void aiRay_pos_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiRay_pos_get")]
  public static extern IntPtr aiRay_pos_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiRay_dir_set")]
  public static extern void aiRay_dir_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiRay_dir_get")]
  public static extern IntPtr aiRay_dir_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_delete_aiRay")]
  public static extern void delete_aiRay(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_new_aiColor3D__SWIG_0")]
  public static extern IntPtr new_aiColor3D__SWIG_0();

  [DllImport("Assimp", EntryPoint="CSharp_new_aiColor3D__SWIG_1")]
  public static extern IntPtr new_aiColor3D__SWIG_1(float jarg1, float jarg2, float jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_new_aiColor3D__SWIG_2")]
  public static extern IntPtr new_aiColor3D__SWIG_2(float jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_new_aiColor3D__SWIG_3")]
  public static extern IntPtr new_aiColor3D__SWIG_3(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiColor3D___equal__")]
  public static extern bool aiColor3D___equal__(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiColor3D___nequal__")]
  public static extern bool aiColor3D___nequal__(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiColor3D___add__")]
  public static extern IntPtr aiColor3D___add__(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiColor3D___sub__")]
  public static extern IntPtr aiColor3D___sub__(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiColor3D___mul____SWIG_0")]
  public static extern IntPtr aiColor3D___mul____SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiColor3D___mul____SWIG_1")]
  public static extern IntPtr aiColor3D___mul____SWIG_1(HandleRef jarg1, float jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiColor3D___idx____SWIG_0")]
  public static extern float aiColor3D___idx____SWIG_0(HandleRef jarg1, uint jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiColor3D_IsBlack")]
  public static extern bool aiColor3D_IsBlack(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiColor3D_r_set")]
  public static extern void aiColor3D_r_set(HandleRef jarg1, float jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiColor3D_r_get")]
  public static extern float aiColor3D_r_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiColor3D_g_set")]
  public static extern void aiColor3D_g_set(HandleRef jarg1, float jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiColor3D_g_get")]
  public static extern float aiColor3D_g_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiColor3D_b_set")]
  public static extern void aiColor3D_b_set(HandleRef jarg1, float jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiColor3D_b_get")]
  public static extern float aiColor3D_b_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_delete_aiColor3D")]
  public static extern void delete_aiColor3D(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_new_aiString__SWIG_0")]
  public static extern IntPtr new_aiString__SWIG_0();

  [DllImport("Assimp", EntryPoint="CSharp_new_aiString__SWIG_1")]
  public static extern IntPtr new_aiString__SWIG_1(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_new_aiString__SWIG_2")]
  public static extern IntPtr new_aiString__SWIG_2(string jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiString___set____SWIG_0")]
  public static extern IntPtr aiString___set____SWIG_0(HandleRef jarg1, string jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiString___equal__")]
  public static extern bool aiString___equal__(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiString___nequal__")]
  public static extern bool aiString___nequal__(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiString_Length_set")]
  public static extern void aiString_Length_set(HandleRef jarg1, uint jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiString_Length_get")]
  public static extern uint aiString_Length_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiString_Data_set")]
  public static extern void aiString_Data_set(HandleRef jarg1, string jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiString_Data_get")]
  public static extern string aiString_Data_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_delete_aiString")]
  public static extern void delete_aiString(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_new_aiMemoryInfo")]
  public static extern IntPtr new_aiMemoryInfo();

  [DllImport("Assimp", EntryPoint="CSharp_aiMemoryInfo_textures_set")]
  public static extern void aiMemoryInfo_textures_set(HandleRef jarg1, uint jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMemoryInfo_textures_get")]
  public static extern uint aiMemoryInfo_textures_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMemoryInfo_materials_set")]
  public static extern void aiMemoryInfo_materials_set(HandleRef jarg1, uint jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMemoryInfo_materials_get")]
  public static extern uint aiMemoryInfo_materials_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMemoryInfo_meshes_set")]
  public static extern void aiMemoryInfo_meshes_set(HandleRef jarg1, uint jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMemoryInfo_meshes_get")]
  public static extern uint aiMemoryInfo_meshes_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMemoryInfo_nodes_set")]
  public static extern void aiMemoryInfo_nodes_set(HandleRef jarg1, uint jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMemoryInfo_nodes_get")]
  public static extern uint aiMemoryInfo_nodes_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMemoryInfo_animations_set")]
  public static extern void aiMemoryInfo_animations_set(HandleRef jarg1, uint jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMemoryInfo_animations_get")]
  public static extern uint aiMemoryInfo_animations_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMemoryInfo_cameras_set")]
  public static extern void aiMemoryInfo_cameras_set(HandleRef jarg1, uint jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMemoryInfo_cameras_get")]
  public static extern uint aiMemoryInfo_cameras_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMemoryInfo_lights_set")]
  public static extern void aiMemoryInfo_lights_set(HandleRef jarg1, uint jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMemoryInfo_lights_get")]
  public static extern uint aiMemoryInfo_lights_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMemoryInfo_total_set")]
  public static extern void aiMemoryInfo_total_set(HandleRef jarg1, uint jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMemoryInfo_total_get")]
  public static extern uint aiMemoryInfo_total_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_delete_aiMemoryInfo")]
  public static extern void delete_aiMemoryInfo(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiGetLegalString")]
  public static extern string aiGetLegalString();

  [DllImport("Assimp", EntryPoint="CSharp_aiGetVersionMinor")]
  public static extern uint aiGetVersionMinor();

  [DllImport("Assimp", EntryPoint="CSharp_aiGetVersionMajor")]
  public static extern uint aiGetVersionMajor();

  [DllImport("Assimp", EntryPoint="CSharp_aiGetVersionRevision")]
  public static extern uint aiGetVersionRevision();

  [DllImport("Assimp", EntryPoint="CSharp_ASSIMP_CFLAGS_SHARED_get")]
  public static extern int ASSIMP_CFLAGS_SHARED_get();

  [DllImport("Assimp", EntryPoint="CSharp_ASSIMP_CFLAGS_STLPORT_get")]
  public static extern int ASSIMP_CFLAGS_STLPORT_get();

  [DllImport("Assimp", EntryPoint="CSharp_ASSIMP_CFLAGS_DEBUG_get")]
  public static extern int ASSIMP_CFLAGS_DEBUG_get();

  [DllImport("Assimp", EntryPoint="CSharp_ASSIMP_CFLAGS_NOBOOST_get")]
  public static extern int ASSIMP_CFLAGS_NOBOOST_get();

  [DllImport("Assimp", EntryPoint="CSharp_ASSIMP_CFLAGS_SINGLETHREADED_get")]
  public static extern int ASSIMP_CFLAGS_SINGLETHREADED_get();

  [DllImport("Assimp", EntryPoint="CSharp_aiGetCompileFlags")]
  public static extern uint aiGetCompileFlags();

  [DllImport("Assimp", EntryPoint="CSharp_new_aiVector2D__SWIG_0")]
  public static extern IntPtr new_aiVector2D__SWIG_0();

  [DllImport("Assimp", EntryPoint="CSharp_new_aiVector2D__SWIG_1")]
  public static extern IntPtr new_aiVector2D__SWIG_1(float jarg1, float jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_new_aiVector2D__SWIG_2")]
  public static extern IntPtr new_aiVector2D__SWIG_2(float jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_new_aiVector2D__SWIG_3")]
  public static extern IntPtr new_aiVector2D__SWIG_3(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiVector2D_Set")]
  public static extern void aiVector2D_Set(HandleRef jarg1, float jarg2, float jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiVector2D_SquareLength")]
  public static extern float aiVector2D_SquareLength(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiVector2D_Length")]
  public static extern float aiVector2D_Length(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiVector2D_Normalize")]
  public static extern IntPtr aiVector2D_Normalize(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiVector2D___addnset__")]
  public static extern IntPtr aiVector2D___addnset__(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiVector2D___subnset__")]
  public static extern IntPtr aiVector2D___subnset__(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiVector2D___mulnset__")]
  public static extern IntPtr aiVector2D___mulnset__(HandleRef jarg1, float jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiVector2D___divnset__")]
  public static extern IntPtr aiVector2D___divnset__(HandleRef jarg1, float jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiVector2D___idx____SWIG_0")]
  public static extern float aiVector2D___idx____SWIG_0(HandleRef jarg1, uint jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiVector2D___equal__")]
  public static extern bool aiVector2D___equal__(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiVector2D___nequal__")]
  public static extern bool aiVector2D___nequal__(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiVector2D___set__")]
  public static extern IntPtr aiVector2D___set__(HandleRef jarg1, float jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiVector2D_SymMul")]
  public static extern IntPtr aiVector2D_SymMul(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiVector2D_x_set")]
  public static extern void aiVector2D_x_set(HandleRef jarg1, float jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiVector2D_x_get")]
  public static extern float aiVector2D_x_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiVector2D_y_set")]
  public static extern void aiVector2D_y_set(HandleRef jarg1, float jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiVector2D_y_get")]
  public static extern float aiVector2D_y_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_delete_aiVector2D")]
  public static extern void delete_aiVector2D(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp___add__")]
  public static extern IntPtr __add__(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp___sub____SWIG_0")]
  public static extern IntPtr __sub____SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp___mul____SWIG_0")]
  public static extern float __mul____SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp___mul____SWIG_1")]
  public static extern IntPtr __mul____SWIG_1(float jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp___mul____SWIG_2")]
  public static extern IntPtr __mul____SWIG_2(HandleRef jarg1, float jarg2);

  [DllImport("Assimp", EntryPoint="CSharp___div____SWIG_0")]
  public static extern IntPtr __div____SWIG_0(HandleRef jarg1, float jarg2);

  [DllImport("Assimp", EntryPoint="CSharp___div____SWIG_1")]
  public static extern IntPtr __div____SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp___sub____SWIG_1")]
  public static extern IntPtr __sub____SWIG_1(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_new_aiVector3D__SWIG_0")]
  public static extern IntPtr new_aiVector3D__SWIG_0();

  [DllImport("Assimp", EntryPoint="CSharp_new_aiVector3D__SWIG_1")]
  public static extern IntPtr new_aiVector3D__SWIG_1(float jarg1, float jarg2, float jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_new_aiVector3D__SWIG_2")]
  public static extern IntPtr new_aiVector3D__SWIG_2(float jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_new_aiVector3D__SWIG_3")]
  public static extern IntPtr new_aiVector3D__SWIG_3(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiVector3D___addnset__")]
  public static extern IntPtr aiVector3D___addnset__(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiVector3D___subnset__")]
  public static extern IntPtr aiVector3D___subnset__(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiVector3D___mulnset____SWIG_0")]
  public static extern IntPtr aiVector3D___mulnset____SWIG_0(HandleRef jarg1, float jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiVector3D___divnset__")]
  public static extern IntPtr aiVector3D___divnset__(HandleRef jarg1, float jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiVector3D___mulnset____SWIG_1")]
  public static extern IntPtr aiVector3D___mulnset____SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiVector3D___mulnset____SWIG_2")]
  public static extern IntPtr aiVector3D___mulnset____SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiVector3D___idx____SWIG_0")]
  public static extern float aiVector3D___idx____SWIG_0(HandleRef jarg1, uint jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiVector3D___equal__")]
  public static extern bool aiVector3D___equal__(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiVector3D___nequal__")]
  public static extern bool aiVector3D___nequal__(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiVector3D_Set")]
  public static extern void aiVector3D_Set(HandleRef jarg1, float jarg2, float jarg3, float jarg4);

  [DllImport("Assimp", EntryPoint="CSharp_aiVector3D_SquareLength")]
  public static extern float aiVector3D_SquareLength(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiVector3D_Length")]
  public static extern float aiVector3D_Length(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiVector3D_Normalize")]
  public static extern IntPtr aiVector3D_Normalize(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiVector3D_SymMul")]
  public static extern IntPtr aiVector3D_SymMul(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiVector3D_x_set")]
  public static extern void aiVector3D_x_set(HandleRef jarg1, float jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiVector3D_x_get")]
  public static extern float aiVector3D_x_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiVector3D_y_set")]
  public static extern void aiVector3D_y_set(HandleRef jarg1, float jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiVector3D_y_get")]
  public static extern float aiVector3D_y_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiVector3D_z_set")]
  public static extern void aiVector3D_z_set(HandleRef jarg1, float jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiVector3D_z_get")]
  public static extern float aiVector3D_z_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_delete_aiVector3D")]
  public static extern void delete_aiVector3D(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_new_aiColor4D__SWIG_0")]
  public static extern IntPtr new_aiColor4D__SWIG_0();

  [DllImport("Assimp", EntryPoint="CSharp_new_aiColor4D__SWIG_1")]
  public static extern IntPtr new_aiColor4D__SWIG_1(float jarg1, float jarg2, float jarg3, float jarg4);

  [DllImport("Assimp", EntryPoint="CSharp_new_aiColor4D__SWIG_2")]
  public static extern IntPtr new_aiColor4D__SWIG_2(float jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_new_aiColor4D__SWIG_3")]
  public static extern IntPtr new_aiColor4D__SWIG_3(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiColor4D___addnset__")]
  public static extern IntPtr aiColor4D___addnset__(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiColor4D___subnset__")]
  public static extern IntPtr aiColor4D___subnset__(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiColor4D___mulnset__")]
  public static extern IntPtr aiColor4D___mulnset__(HandleRef jarg1, float jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiColor4D___divnset__")]
  public static extern IntPtr aiColor4D___divnset__(HandleRef jarg1, float jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiColor4D___equal__")]
  public static extern bool aiColor4D___equal__(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiColor4D___nequal__")]
  public static extern bool aiColor4D___nequal__(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiColor4D___idx____SWIG_0")]
  public static extern float aiColor4D___idx____SWIG_0(HandleRef jarg1, uint jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiColor4D_IsBlack")]
  public static extern bool aiColor4D_IsBlack(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiColor4D_r_set")]
  public static extern void aiColor4D_r_set(HandleRef jarg1, float jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiColor4D_r_get")]
  public static extern float aiColor4D_r_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiColor4D_g_set")]
  public static extern void aiColor4D_g_set(HandleRef jarg1, float jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiColor4D_g_get")]
  public static extern float aiColor4D_g_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiColor4D_b_set")]
  public static extern void aiColor4D_b_set(HandleRef jarg1, float jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiColor4D_b_get")]
  public static extern float aiColor4D_b_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiColor4D_a_set")]
  public static extern void aiColor4D_a_set(HandleRef jarg1, float jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiColor4D_a_get")]
  public static extern float aiColor4D_a_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_delete_aiColor4D")]
  public static extern void delete_aiColor4D(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_new_aiMatrix3x3__SWIG_0")]
  public static extern IntPtr new_aiMatrix3x3__SWIG_0();

  [DllImport("Assimp", EntryPoint="CSharp_new_aiMatrix3x3__SWIG_1")]
  public static extern IntPtr new_aiMatrix3x3__SWIG_1(float jarg1, float jarg2, float jarg3, float jarg4, float jarg5, float jarg6, float jarg7, float jarg8, float jarg9);

  [DllImport("Assimp", EntryPoint="CSharp_new_aiMatrix3x3__SWIG_2")]
  public static extern IntPtr new_aiMatrix3x3__SWIG_2(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMatrix3x3_Transpose")]
  public static extern IntPtr aiMatrix3x3_Transpose(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMatrix3x3_Inverse")]
  public static extern IntPtr aiMatrix3x3_Inverse(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMatrix3x3_Determinant")]
  public static extern float aiMatrix3x3_Determinant(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMatrix3x3_RotationZ")]
  public static extern IntPtr aiMatrix3x3_RotationZ(float jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMatrix3x3_Rotation")]
  public static extern IntPtr aiMatrix3x3_Rotation(float jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiMatrix3x3_Translation")]
  public static extern IntPtr aiMatrix3x3_Translation(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMatrix3x3_FromToMatrix")]
  public static extern IntPtr aiMatrix3x3_FromToMatrix(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiMatrix3x3_a1_set")]
  public static extern void aiMatrix3x3_a1_set(HandleRef jarg1, float jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMatrix3x3_a1_get")]
  public static extern float aiMatrix3x3_a1_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMatrix3x3_a2_set")]
  public static extern void aiMatrix3x3_a2_set(HandleRef jarg1, float jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMatrix3x3_a2_get")]
  public static extern float aiMatrix3x3_a2_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMatrix3x3_a3_set")]
  public static extern void aiMatrix3x3_a3_set(HandleRef jarg1, float jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMatrix3x3_a3_get")]
  public static extern float aiMatrix3x3_a3_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMatrix3x3_b1_set")]
  public static extern void aiMatrix3x3_b1_set(HandleRef jarg1, float jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMatrix3x3_b1_get")]
  public static extern float aiMatrix3x3_b1_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMatrix3x3_b2_set")]
  public static extern void aiMatrix3x3_b2_set(HandleRef jarg1, float jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMatrix3x3_b2_get")]
  public static extern float aiMatrix3x3_b2_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMatrix3x3_b3_set")]
  public static extern void aiMatrix3x3_b3_set(HandleRef jarg1, float jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMatrix3x3_b3_get")]
  public static extern float aiMatrix3x3_b3_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMatrix3x3_c1_set")]
  public static extern void aiMatrix3x3_c1_set(HandleRef jarg1, float jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMatrix3x3_c1_get")]
  public static extern float aiMatrix3x3_c1_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMatrix3x3_c2_set")]
  public static extern void aiMatrix3x3_c2_set(HandleRef jarg1, float jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMatrix3x3_c2_get")]
  public static extern float aiMatrix3x3_c2_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMatrix3x3_c3_set")]
  public static extern void aiMatrix3x3_c3_set(HandleRef jarg1, float jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMatrix3x3_c3_get")]
  public static extern float aiMatrix3x3_c3_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_delete_aiMatrix3x3")]
  public static extern void delete_aiMatrix3x3(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_new_aiMatrix4x4__SWIG_0")]
  public static extern IntPtr new_aiMatrix4x4__SWIG_0();

  [DllImport("Assimp", EntryPoint="CSharp_new_aiMatrix4x4__SWIG_1")]
  public static extern IntPtr new_aiMatrix4x4__SWIG_1(float jarg1, float jarg2, float jarg3, float jarg4, float jarg5, float jarg6, float jarg7, float jarg8, float jarg9, float jarg10, float jarg11, float jarg12, float jarg13, float jarg14, float jarg15, float jarg16);

  [DllImport("Assimp", EntryPoint="CSharp_new_aiMatrix4x4__SWIG_2")]
  public static extern IntPtr new_aiMatrix4x4__SWIG_2(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMatrix4x4_Transpose")]
  public static extern IntPtr aiMatrix4x4_Transpose(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMatrix4x4_Inverse")]
  public static extern IntPtr aiMatrix4x4_Inverse(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMatrix4x4_Determinant")]
  public static extern float aiMatrix4x4_Determinant(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMatrix4x4_IsIdentity")]
  public static extern bool aiMatrix4x4_IsIdentity(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMatrix4x4_Decompose")]
  public static extern void aiMatrix4x4_Decompose(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("Assimp", EntryPoint="CSharp_aiMatrix4x4_DecomposeNoScaling")]
  public static extern void aiMatrix4x4_DecomposeNoScaling(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiMatrix4x4_FromEulerAnglesXYZ__SWIG_0")]
  public static extern IntPtr aiMatrix4x4_FromEulerAnglesXYZ__SWIG_0(HandleRef jarg1, float jarg2, float jarg3, float jarg4);

  [DllImport("Assimp", EntryPoint="CSharp_aiMatrix4x4_FromEulerAnglesXYZ__SWIG_1")]
  public static extern IntPtr aiMatrix4x4_FromEulerAnglesXYZ__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMatrix4x4_RotationX")]
  public static extern IntPtr aiMatrix4x4_RotationX(float jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMatrix4x4_RotationY")]
  public static extern IntPtr aiMatrix4x4_RotationY(float jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMatrix4x4_RotationZ")]
  public static extern IntPtr aiMatrix4x4_RotationZ(float jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMatrix4x4_Rotation")]
  public static extern IntPtr aiMatrix4x4_Rotation(float jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiMatrix4x4_Translation")]
  public static extern IntPtr aiMatrix4x4_Translation(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMatrix4x4_Scaling")]
  public static extern IntPtr aiMatrix4x4_Scaling(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMatrix4x4_FromToMatrix")]
  public static extern IntPtr aiMatrix4x4_FromToMatrix(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiMatrix4x4_a1_set")]
  public static extern void aiMatrix4x4_a1_set(HandleRef jarg1, float jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMatrix4x4_a1_get")]
  public static extern float aiMatrix4x4_a1_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMatrix4x4_a2_set")]
  public static extern void aiMatrix4x4_a2_set(HandleRef jarg1, float jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMatrix4x4_a2_get")]
  public static extern float aiMatrix4x4_a2_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMatrix4x4_a3_set")]
  public static extern void aiMatrix4x4_a3_set(HandleRef jarg1, float jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMatrix4x4_a3_get")]
  public static extern float aiMatrix4x4_a3_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMatrix4x4_a4_set")]
  public static extern void aiMatrix4x4_a4_set(HandleRef jarg1, float jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMatrix4x4_a4_get")]
  public static extern float aiMatrix4x4_a4_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMatrix4x4_b1_set")]
  public static extern void aiMatrix4x4_b1_set(HandleRef jarg1, float jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMatrix4x4_b1_get")]
  public static extern float aiMatrix4x4_b1_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMatrix4x4_b2_set")]
  public static extern void aiMatrix4x4_b2_set(HandleRef jarg1, float jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMatrix4x4_b2_get")]
  public static extern float aiMatrix4x4_b2_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMatrix4x4_b3_set")]
  public static extern void aiMatrix4x4_b3_set(HandleRef jarg1, float jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMatrix4x4_b3_get")]
  public static extern float aiMatrix4x4_b3_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMatrix4x4_b4_set")]
  public static extern void aiMatrix4x4_b4_set(HandleRef jarg1, float jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMatrix4x4_b4_get")]
  public static extern float aiMatrix4x4_b4_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMatrix4x4_c1_set")]
  public static extern void aiMatrix4x4_c1_set(HandleRef jarg1, float jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMatrix4x4_c1_get")]
  public static extern float aiMatrix4x4_c1_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMatrix4x4_c2_set")]
  public static extern void aiMatrix4x4_c2_set(HandleRef jarg1, float jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMatrix4x4_c2_get")]
  public static extern float aiMatrix4x4_c2_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMatrix4x4_c3_set")]
  public static extern void aiMatrix4x4_c3_set(HandleRef jarg1, float jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMatrix4x4_c3_get")]
  public static extern float aiMatrix4x4_c3_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMatrix4x4_c4_set")]
  public static extern void aiMatrix4x4_c4_set(HandleRef jarg1, float jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMatrix4x4_c4_get")]
  public static extern float aiMatrix4x4_c4_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMatrix4x4_d1_set")]
  public static extern void aiMatrix4x4_d1_set(HandleRef jarg1, float jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMatrix4x4_d1_get")]
  public static extern float aiMatrix4x4_d1_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMatrix4x4_d2_set")]
  public static extern void aiMatrix4x4_d2_set(HandleRef jarg1, float jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMatrix4x4_d2_get")]
  public static extern float aiMatrix4x4_d2_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMatrix4x4_d3_set")]
  public static extern void aiMatrix4x4_d3_set(HandleRef jarg1, float jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMatrix4x4_d3_get")]
  public static extern float aiMatrix4x4_d3_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMatrix4x4_d4_set")]
  public static extern void aiMatrix4x4_d4_set(HandleRef jarg1, float jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMatrix4x4_d4_get")]
  public static extern float aiMatrix4x4_d4_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_delete_aiMatrix4x4")]
  public static extern void delete_aiMatrix4x4(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiCamera_mName_set")]
  public static extern void aiCamera_mName_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiCamera_mName_get")]
  public static extern IntPtr aiCamera_mName_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiCamera_mPosition_set")]
  public static extern void aiCamera_mPosition_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiCamera_mPosition_get")]
  public static extern IntPtr aiCamera_mPosition_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiCamera_mUp_set")]
  public static extern void aiCamera_mUp_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiCamera_mUp_get")]
  public static extern IntPtr aiCamera_mUp_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiCamera_mLookAt_set")]
  public static extern void aiCamera_mLookAt_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiCamera_mLookAt_get")]
  public static extern IntPtr aiCamera_mLookAt_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiCamera_mHorizontalFOV_set")]
  public static extern void aiCamera_mHorizontalFOV_set(HandleRef jarg1, float jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiCamera_mHorizontalFOV_get")]
  public static extern float aiCamera_mHorizontalFOV_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiCamera_mClipPlaneNear_set")]
  public static extern void aiCamera_mClipPlaneNear_set(HandleRef jarg1, float jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiCamera_mClipPlaneNear_get")]
  public static extern float aiCamera_mClipPlaneNear_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiCamera_mClipPlaneFar_set")]
  public static extern void aiCamera_mClipPlaneFar_set(HandleRef jarg1, float jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiCamera_mClipPlaneFar_get")]
  public static extern float aiCamera_mClipPlaneFar_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiCamera_mAspect_set")]
  public static extern void aiCamera_mAspect_set(HandleRef jarg1, float jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiCamera_mAspect_get")]
  public static extern float aiCamera_mAspect_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_new_aiCamera")]
  public static extern IntPtr new_aiCamera();

  [DllImport("Assimp", EntryPoint="CSharp_aiCamera_GetCameraMatrix")]
  public static extern void aiCamera_GetCameraMatrix(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_delete_aiCamera")]
  public static extern void delete_aiCamera(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiLight_mName_set")]
  public static extern void aiLight_mName_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiLight_mName_get")]
  public static extern IntPtr aiLight_mName_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiLight_mType_set")]
  public static extern void aiLight_mType_set(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiLight_mType_get")]
  public static extern int aiLight_mType_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiLight_mPosition_set")]
  public static extern void aiLight_mPosition_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiLight_mPosition_get")]
  public static extern IntPtr aiLight_mPosition_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiLight_mDirection_set")]
  public static extern void aiLight_mDirection_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiLight_mDirection_get")]
  public static extern IntPtr aiLight_mDirection_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiLight_mAttenuationConstant_set")]
  public static extern void aiLight_mAttenuationConstant_set(HandleRef jarg1, float jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiLight_mAttenuationConstant_get")]
  public static extern float aiLight_mAttenuationConstant_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiLight_mAttenuationLinear_set")]
  public static extern void aiLight_mAttenuationLinear_set(HandleRef jarg1, float jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiLight_mAttenuationLinear_get")]
  public static extern float aiLight_mAttenuationLinear_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiLight_mAttenuationQuadratic_set")]
  public static extern void aiLight_mAttenuationQuadratic_set(HandleRef jarg1, float jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiLight_mAttenuationQuadratic_get")]
  public static extern float aiLight_mAttenuationQuadratic_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiLight_mColorDiffuse_set")]
  public static extern void aiLight_mColorDiffuse_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiLight_mColorDiffuse_get")]
  public static extern IntPtr aiLight_mColorDiffuse_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiLight_mColorSpecular_set")]
  public static extern void aiLight_mColorSpecular_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiLight_mColorSpecular_get")]
  public static extern IntPtr aiLight_mColorSpecular_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiLight_mColorAmbient_set")]
  public static extern void aiLight_mColorAmbient_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiLight_mColorAmbient_get")]
  public static extern IntPtr aiLight_mColorAmbient_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiLight_mAngleInnerCone_set")]
  public static extern void aiLight_mAngleInnerCone_set(HandleRef jarg1, float jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiLight_mAngleInnerCone_get")]
  public static extern float aiLight_mAngleInnerCone_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiLight_mAngleOuterCone_set")]
  public static extern void aiLight_mAngleOuterCone_set(HandleRef jarg1, float jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiLight_mAngleOuterCone_get")]
  public static extern float aiLight_mAngleOuterCone_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_new_aiLight")]
  public static extern IntPtr new_aiLight();

  [DllImport("Assimp", EntryPoint="CSharp_delete_aiLight")]
  public static extern void delete_aiLight(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiVectorKey_mTime_set")]
  public static extern void aiVectorKey_mTime_set(HandleRef jarg1, double jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiVectorKey_mTime_get")]
  public static extern double aiVectorKey_mTime_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiVectorKey_mValue_set")]
  public static extern void aiVectorKey_mValue_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiVectorKey_mValue_get")]
  public static extern IntPtr aiVectorKey_mValue_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_new_aiVectorKey__SWIG_0")]
  public static extern IntPtr new_aiVectorKey__SWIG_0();

  [DllImport("Assimp", EntryPoint="CSharp_new_aiVectorKey__SWIG_1")]
  public static extern IntPtr new_aiVectorKey__SWIG_1(double jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiVectorKey___equal__")]
  public static extern bool aiVectorKey___equal__(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiVectorKey___nequal__")]
  public static extern bool aiVectorKey___nequal__(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiVectorKey___smaller__")]
  public static extern bool aiVectorKey___smaller__(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiVectorKey___greater__")]
  public static extern bool aiVectorKey___greater__(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_delete_aiVectorKey")]
  public static extern void delete_aiVectorKey(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiQuatKey_mTime_set")]
  public static extern void aiQuatKey_mTime_set(HandleRef jarg1, double jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiQuatKey_mTime_get")]
  public static extern double aiQuatKey_mTime_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiQuatKey_mValue_set")]
  public static extern void aiQuatKey_mValue_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiQuatKey_mValue_get")]
  public static extern IntPtr aiQuatKey_mValue_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_new_aiQuatKey__SWIG_0")]
  public static extern IntPtr new_aiQuatKey__SWIG_0();

  [DllImport("Assimp", EntryPoint="CSharp_new_aiQuatKey__SWIG_1")]
  public static extern IntPtr new_aiQuatKey__SWIG_1(double jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiQuatKey___equal__")]
  public static extern bool aiQuatKey___equal__(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiQuatKey___nequal__")]
  public static extern bool aiQuatKey___nequal__(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiQuatKey___smaller__")]
  public static extern bool aiQuatKey___smaller__(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiQuatKey___greater__")]
  public static extern bool aiQuatKey___greater__(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_delete_aiQuatKey")]
  public static extern void delete_aiQuatKey(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMeshKey_mTime_set")]
  public static extern void aiMeshKey_mTime_set(HandleRef jarg1, double jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMeshKey_mTime_get")]
  public static extern double aiMeshKey_mTime_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMeshKey_mValue_set")]
  public static extern void aiMeshKey_mValue_set(HandleRef jarg1, uint jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMeshKey_mValue_get")]
  public static extern uint aiMeshKey_mValue_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_new_aiMeshKey__SWIG_0")]
  public static extern IntPtr new_aiMeshKey__SWIG_0();

  [DllImport("Assimp", EntryPoint="CSharp_new_aiMeshKey__SWIG_1")]
  public static extern IntPtr new_aiMeshKey__SWIG_1(double jarg1, uint jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMeshKey___equal__")]
  public static extern bool aiMeshKey___equal__(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMeshKey___nequal__")]
  public static extern bool aiMeshKey___nequal__(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMeshKey___smaller__")]
  public static extern bool aiMeshKey___smaller__(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMeshKey___greater__")]
  public static extern bool aiMeshKey___greater__(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_delete_aiMeshKey")]
  public static extern void delete_aiMeshKey(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiNodeAnim_mNodeName_set")]
  public static extern void aiNodeAnim_mNodeName_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiNodeAnim_mNodeName_get")]
  public static extern IntPtr aiNodeAnim_mNodeName_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiNodeAnim_mNumPositionKeys_set")]
  public static extern void aiNodeAnim_mNumPositionKeys_set(HandleRef jarg1, uint jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiNodeAnim_mNumPositionKeys_get")]
  public static extern uint aiNodeAnim_mNumPositionKeys_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiNodeAnim_mNumRotationKeys_set")]
  public static extern void aiNodeAnim_mNumRotationKeys_set(HandleRef jarg1, uint jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiNodeAnim_mNumRotationKeys_get")]
  public static extern uint aiNodeAnim_mNumRotationKeys_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiNodeAnim_mNumScalingKeys_set")]
  public static extern void aiNodeAnim_mNumScalingKeys_set(HandleRef jarg1, uint jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiNodeAnim_mNumScalingKeys_get")]
  public static extern uint aiNodeAnim_mNumScalingKeys_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiNodeAnim_mPreState_set")]
  public static extern void aiNodeAnim_mPreState_set(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiNodeAnim_mPreState_get")]
  public static extern int aiNodeAnim_mPreState_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiNodeAnim_mPostState_set")]
  public static extern void aiNodeAnim_mPostState_set(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiNodeAnim_mPostState_get")]
  public static extern int aiNodeAnim_mPostState_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_new_aiNodeAnim")]
  public static extern IntPtr new_aiNodeAnim();

  [DllImport("Assimp", EntryPoint="CSharp_delete_aiNodeAnim")]
  public static extern void delete_aiNodeAnim(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiNodeAnim_GetmPositionKeys")]
  public static extern IntPtr aiNodeAnim_GetmPositionKeys(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiNodeAnim_GetmRotationKeys")]
  public static extern IntPtr aiNodeAnim_GetmRotationKeys(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiNodeAnim_GetmScalingKeys")]
  public static extern IntPtr aiNodeAnim_GetmScalingKeys(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMeshAnim_mName_set")]
  public static extern void aiMeshAnim_mName_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMeshAnim_mName_get")]
  public static extern IntPtr aiMeshAnim_mName_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMeshAnim_mNumKeys_set")]
  public static extern void aiMeshAnim_mNumKeys_set(HandleRef jarg1, uint jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMeshAnim_mNumKeys_get")]
  public static extern uint aiMeshAnim_mNumKeys_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_new_aiMeshAnim")]
  public static extern IntPtr new_aiMeshAnim();

  [DllImport("Assimp", EntryPoint="CSharp_delete_aiMeshAnim")]
  public static extern void delete_aiMeshAnim(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMeshAnim_GetmKeys")]
  public static extern IntPtr aiMeshAnim_GetmKeys(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiAnimation_mName_set")]
  public static extern void aiAnimation_mName_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiAnimation_mName_get")]
  public static extern IntPtr aiAnimation_mName_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiAnimation_mDuration_set")]
  public static extern void aiAnimation_mDuration_set(HandleRef jarg1, double jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiAnimation_mDuration_get")]
  public static extern double aiAnimation_mDuration_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiAnimation_mTicksPerSecond_set")]
  public static extern void aiAnimation_mTicksPerSecond_set(HandleRef jarg1, double jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiAnimation_mTicksPerSecond_get")]
  public static extern double aiAnimation_mTicksPerSecond_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiAnimation_mNumChannels_set")]
  public static extern void aiAnimation_mNumChannels_set(HandleRef jarg1, uint jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiAnimation_mNumChannels_get")]
  public static extern uint aiAnimation_mNumChannels_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiAnimation_mNumMeshChannels_set")]
  public static extern void aiAnimation_mNumMeshChannels_set(HandleRef jarg1, uint jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiAnimation_mNumMeshChannels_get")]
  public static extern uint aiAnimation_mNumMeshChannels_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_new_aiAnimation")]
  public static extern IntPtr new_aiAnimation();

  [DllImport("Assimp", EntryPoint="CSharp_delete_aiAnimation")]
  public static extern void delete_aiAnimation(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiAnimation_GetmChannels")]
  public static extern IntPtr aiAnimation_GetmChannels(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiAnimation_GetmMeshChannels")]
  public static extern IntPtr aiAnimation_GetmMeshChannels(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_AI_MAX_FACE_INDICES_get")]
  public static extern int AI_MAX_FACE_INDICES_get();

  [DllImport("Assimp", EntryPoint="CSharp_AI_MAX_BONE_WEIGHTS_get")]
  public static extern int AI_MAX_BONE_WEIGHTS_get();

  [DllImport("Assimp", EntryPoint="CSharp_AI_MAX_VERTICES_get")]
  public static extern int AI_MAX_VERTICES_get();

  [DllImport("Assimp", EntryPoint="CSharp_AI_MAX_FACES_get")]
  public static extern int AI_MAX_FACES_get();

  [DllImport("Assimp", EntryPoint="CSharp_AI_MAX_NUMBER_OF_COLOR_SETS_get")]
  public static extern int AI_MAX_NUMBER_OF_COLOR_SETS_get();

  [DllImport("Assimp", EntryPoint="CSharp_AI_MAX_NUMBER_OF_TEXTURECOORDS_get")]
  public static extern int AI_MAX_NUMBER_OF_TEXTURECOORDS_get();

  [DllImport("Assimp", EntryPoint="CSharp_aiFace_mNumIndices_set")]
  public static extern void aiFace_mNumIndices_set(HandleRef jarg1, uint jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiFace_mNumIndices_get")]
  public static extern uint aiFace_mNumIndices_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_new_aiFace__SWIG_0")]
  public static extern IntPtr new_aiFace__SWIG_0();

  [DllImport("Assimp", EntryPoint="CSharp_delete_aiFace")]
  public static extern void delete_aiFace(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_new_aiFace__SWIG_1")]
  public static extern IntPtr new_aiFace__SWIG_1(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiFace___set__")]
  public static extern IntPtr aiFace___set__(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiFace___equal__")]
  public static extern bool aiFace___equal__(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiFace___nequal__")]
  public static extern bool aiFace___nequal__(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiFace_GetmIndices")]
  public static extern IntPtr aiFace_GetmIndices(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiVertexWeight_mVertexId_set")]
  public static extern void aiVertexWeight_mVertexId_set(HandleRef jarg1, uint jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiVertexWeight_mVertexId_get")]
  public static extern uint aiVertexWeight_mVertexId_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiVertexWeight_mWeight_set")]
  public static extern void aiVertexWeight_mWeight_set(HandleRef jarg1, float jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiVertexWeight_mWeight_get")]
  public static extern float aiVertexWeight_mWeight_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_new_aiVertexWeight__SWIG_0")]
  public static extern IntPtr new_aiVertexWeight__SWIG_0();

  [DllImport("Assimp", EntryPoint="CSharp_new_aiVertexWeight__SWIG_1")]
  public static extern IntPtr new_aiVertexWeight__SWIG_1(uint jarg1, float jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_delete_aiVertexWeight")]
  public static extern void delete_aiVertexWeight(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiBone_mName_set")]
  public static extern void aiBone_mName_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiBone_mName_get")]
  public static extern IntPtr aiBone_mName_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiBone_mNumWeights_set")]
  public static extern void aiBone_mNumWeights_set(HandleRef jarg1, uint jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiBone_mNumWeights_get")]
  public static extern uint aiBone_mNumWeights_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiBone_mOffsetMatrix_set")]
  public static extern void aiBone_mOffsetMatrix_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiBone_mOffsetMatrix_get")]
  public static extern IntPtr aiBone_mOffsetMatrix_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_new_aiBone__SWIG_0")]
  public static extern IntPtr new_aiBone__SWIG_0();

  [DllImport("Assimp", EntryPoint="CSharp_new_aiBone__SWIG_1")]
  public static extern IntPtr new_aiBone__SWIG_1(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_delete_aiBone")]
  public static extern void delete_aiBone(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiBone_GetmWeights")]
  public static extern IntPtr aiBone_GetmWeights(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiAnimMesh_mBitangents_set")]
  public static extern void aiAnimMesh_mBitangents_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiAnimMesh_mBitangents_get")]
  public static extern IntPtr aiAnimMesh_mBitangents_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiAnimMesh_mNumVertices_set")]
  public static extern void aiAnimMesh_mNumVertices_set(HandleRef jarg1, uint jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiAnimMesh_mNumVertices_get")]
  public static extern uint aiAnimMesh_mNumVertices_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_new_aiAnimMesh")]
  public static extern IntPtr new_aiAnimMesh();

  [DllImport("Assimp", EntryPoint="CSharp_delete_aiAnimMesh")]
  public static extern void delete_aiAnimMesh(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiAnimMesh_HasPositions")]
  public static extern bool aiAnimMesh_HasPositions(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiAnimMesh_HasNormals")]
  public static extern bool aiAnimMesh_HasNormals(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiAnimMesh_HasTangentsAndBitangents")]
  public static extern bool aiAnimMesh_HasTangentsAndBitangents(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiAnimMesh_HasVertexColors")]
  public static extern bool aiAnimMesh_HasVertexColors(HandleRef jarg1, uint jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiAnimMesh_HasTextureCoords")]
  public static extern bool aiAnimMesh_HasTextureCoords(HandleRef jarg1, uint jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMesh_mPrimitiveTypes_set")]
  public static extern void aiMesh_mPrimitiveTypes_set(HandleRef jarg1, uint jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMesh_mPrimitiveTypes_get")]
  public static extern uint aiMesh_mPrimitiveTypes_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMesh_mNumVertices_set")]
  public static extern void aiMesh_mNumVertices_set(HandleRef jarg1, uint jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMesh_mNumVertices_get")]
  public static extern uint aiMesh_mNumVertices_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMesh_mNumFaces_set")]
  public static extern void aiMesh_mNumFaces_set(HandleRef jarg1, uint jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMesh_mNumFaces_get")]
  public static extern uint aiMesh_mNumFaces_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMesh_mNumBones_set")]
  public static extern void aiMesh_mNumBones_set(HandleRef jarg1, uint jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMesh_mNumBones_get")]
  public static extern uint aiMesh_mNumBones_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMesh_mMaterialIndex_set")]
  public static extern void aiMesh_mMaterialIndex_set(HandleRef jarg1, uint jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMesh_mMaterialIndex_get")]
  public static extern uint aiMesh_mMaterialIndex_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMesh_mName_set")]
  public static extern void aiMesh_mName_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMesh_mName_get")]
  public static extern IntPtr aiMesh_mName_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMesh_mNumAnimMeshes_set")]
  public static extern void aiMesh_mNumAnimMeshes_set(HandleRef jarg1, uint jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMesh_mNumAnimMeshes_get")]
  public static extern uint aiMesh_mNumAnimMeshes_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_new_aiMesh")]
  public static extern IntPtr new_aiMesh();

  [DllImport("Assimp", EntryPoint="CSharp_delete_aiMesh")]
  public static extern void delete_aiMesh(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMesh_HasPositions")]
  public static extern bool aiMesh_HasPositions(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMesh_HasFaces")]
  public static extern bool aiMesh_HasFaces(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMesh_HasNormals")]
  public static extern bool aiMesh_HasNormals(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMesh_HasTangentsAndBitangents")]
  public static extern bool aiMesh_HasTangentsAndBitangents(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMesh_HasVertexColors")]
  public static extern bool aiMesh_HasVertexColors(HandleRef jarg1, uint jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMesh_HasTextureCoords")]
  public static extern bool aiMesh_HasTextureCoords(HandleRef jarg1, uint jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMesh_GetNumUVChannels")]
  public static extern uint aiMesh_GetNumUVChannels(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMesh_GetNumColorChannels")]
  public static extern uint aiMesh_GetNumColorChannels(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMesh_HasBones")]
  public static extern bool aiMesh_HasBones(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMesh_GetmAnimMeshes")]
  public static extern IntPtr aiMesh_GetmAnimMeshes(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMesh_GetmBitangents")]
  public static extern IntPtr aiMesh_GetmBitangents(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMesh_GetmBones")]
  public static extern IntPtr aiMesh_GetmBones(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMesh_GetmColors")]
  public static extern IntPtr aiMesh_GetmColors(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMesh_GetmFaces")]
  public static extern IntPtr aiMesh_GetmFaces(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMesh_GetmNormals")]
  public static extern IntPtr aiMesh_GetmNormals(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMesh_GetmTangents")]
  public static extern IntPtr aiMesh_GetmTangents(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMesh_GetmTextureCoords")]
  public static extern IntPtr aiMesh_GetmTextureCoords(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMesh_GetmNumUVComponents")]
  public static extern IntPtr aiMesh_GetmNumUVComponents(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMesh_GetmVertices")]
  public static extern IntPtr aiMesh_GetmVertices(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_AI_DEFAULT_MATERIAL_NAME_get")]
  public static extern string AI_DEFAULT_MATERIAL_NAME_get();

  [DllImport("Assimp", EntryPoint="CSharp_AI_DEFAULT_TEXTURED_MATERIAL_NAME_get")]
  public static extern string AI_DEFAULT_TEXTURED_MATERIAL_NAME_get();

  [DllImport("Assimp", EntryPoint="CSharp_aiUVTransform_mTranslation_set")]
  public static extern void aiUVTransform_mTranslation_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiUVTransform_mTranslation_get")]
  public static extern IntPtr aiUVTransform_mTranslation_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiUVTransform_mScaling_set")]
  public static extern void aiUVTransform_mScaling_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiUVTransform_mScaling_get")]
  public static extern IntPtr aiUVTransform_mScaling_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiUVTransform_mRotation_set")]
  public static extern void aiUVTransform_mRotation_set(HandleRef jarg1, float jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiUVTransform_mRotation_get")]
  public static extern float aiUVTransform_mRotation_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_new_aiUVTransform")]
  public static extern IntPtr new_aiUVTransform();

  [DllImport("Assimp", EntryPoint="CSharp_delete_aiUVTransform")]
  public static extern void delete_aiUVTransform(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMaterialProperty_mKey_set")]
  public static extern void aiMaterialProperty_mKey_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMaterialProperty_mKey_get")]
  public static extern IntPtr aiMaterialProperty_mKey_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMaterialProperty_mSemantic_set")]
  public static extern void aiMaterialProperty_mSemantic_set(HandleRef jarg1, uint jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMaterialProperty_mSemantic_get")]
  public static extern uint aiMaterialProperty_mSemantic_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMaterialProperty_mIndex_set")]
  public static extern void aiMaterialProperty_mIndex_set(HandleRef jarg1, uint jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMaterialProperty_mIndex_get")]
  public static extern uint aiMaterialProperty_mIndex_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMaterialProperty_mDataLength_set")]
  public static extern void aiMaterialProperty_mDataLength_set(HandleRef jarg1, uint jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMaterialProperty_mDataLength_get")]
  public static extern uint aiMaterialProperty_mDataLength_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMaterialProperty_mType_set")]
  public static extern void aiMaterialProperty_mType_set(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMaterialProperty_mType_get")]
  public static extern int aiMaterialProperty_mType_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMaterialProperty_mData_set")]
  public static extern void aiMaterialProperty_mData_set(HandleRef jarg1, string jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMaterialProperty_mData_get")]
  public static extern string aiMaterialProperty_mData_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_new_aiMaterialProperty")]
  public static extern IntPtr new_aiMaterialProperty();

  [DllImport("Assimp", EntryPoint="CSharp_delete_aiMaterialProperty")]
  public static extern void delete_aiMaterialProperty(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_new_aiMaterial")]
  public static extern IntPtr new_aiMaterial();

  [DllImport("Assimp", EntryPoint="CSharp_delete_aiMaterial")]
  public static extern void delete_aiMaterial(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMaterial_GetTextureCount")]
  public static extern uint aiMaterial_GetTextureCount(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMaterial_GetDiffuse")]
  public static extern bool aiMaterial_GetDiffuse(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMaterial_GetSpecular")]
  public static extern bool aiMaterial_GetSpecular(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMaterial_GetAmbient")]
  public static extern bool aiMaterial_GetAmbient(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMaterial_GetEmissive")]
  public static extern bool aiMaterial_GetEmissive(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMaterial_GetOpacity")]
  public static extern bool aiMaterial_GetOpacity(HandleRef jarg1, ref float jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMaterial_GetShininessStrength")]
  public static extern bool aiMaterial_GetShininessStrength(HandleRef jarg1, ref float jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMaterial_GetShadingModel")]
  public static extern bool aiMaterial_GetShadingModel(HandleRef jarg1, ref int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMaterial_GetTexFlagsDiffuse0")]
  public static extern bool aiMaterial_GetTexFlagsDiffuse0(HandleRef jarg1, ref int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMaterial_GetMappingModeUDiffuse0")]
  public static extern bool aiMaterial_GetMappingModeUDiffuse0(HandleRef jarg1, ref int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMaterial_GetMappingModeVDiffuse0")]
  public static extern bool aiMaterial_GetMappingModeVDiffuse0(HandleRef jarg1, ref int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMaterial_GetTextureDiffuse0")]
  public static extern bool aiMaterial_GetTextureDiffuse0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMaterial_GetTextureSpecular0")]
  public static extern bool aiMaterial_GetTextureSpecular0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMaterial_GetTextureOpacity0")]
  public static extern bool aiMaterial_GetTextureOpacity0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMaterial_GetTextureAmbient0")]
  public static extern bool aiMaterial_GetTextureAmbient0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMaterial_GetTextureEmissive0")]
  public static extern bool aiMaterial_GetTextureEmissive0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMaterial_GetTextureShininess0")]
  public static extern bool aiMaterial_GetTextureShininess0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMaterial_GetTextureLightmap0")]
  public static extern bool aiMaterial_GetTextureLightmap0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMaterial_GetTextureNormals0")]
  public static extern bool aiMaterial_GetTextureNormals0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMaterial_GetTextureHeight0")]
  public static extern bool aiMaterial_GetTextureHeight0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMaterial_GetGlobalBackgroundImage")]
  public static extern bool aiMaterial_GetGlobalBackgroundImage(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMaterial_GetTwoSided")]
  public static extern bool aiMaterial_GetTwoSided(HandleRef jarg1, ref int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp__AI_MATKEY_TEXTURE_BASE_get")]
  public static extern string _AI_MATKEY_TEXTURE_BASE_get();

  [DllImport("Assimp", EntryPoint="CSharp__AI_MATKEY_UVWSRC_BASE_get")]
  public static extern string _AI_MATKEY_UVWSRC_BASE_get();

  [DllImport("Assimp", EntryPoint="CSharp__AI_MATKEY_TEXOP_BASE_get")]
  public static extern string _AI_MATKEY_TEXOP_BASE_get();

  [DllImport("Assimp", EntryPoint="CSharp__AI_MATKEY_MAPPING_BASE_get")]
  public static extern string _AI_MATKEY_MAPPING_BASE_get();

  [DllImport("Assimp", EntryPoint="CSharp__AI_MATKEY_TEXBLEND_BASE_get")]
  public static extern string _AI_MATKEY_TEXBLEND_BASE_get();

  [DllImport("Assimp", EntryPoint="CSharp__AI_MATKEY_MAPPINGMODE_U_BASE_get")]
  public static extern string _AI_MATKEY_MAPPINGMODE_U_BASE_get();

  [DllImport("Assimp", EntryPoint="CSharp__AI_MATKEY_MAPPINGMODE_V_BASE_get")]
  public static extern string _AI_MATKEY_MAPPINGMODE_V_BASE_get();

  [DllImport("Assimp", EntryPoint="CSharp__AI_MATKEY_TEXMAP_AXIS_BASE_get")]
  public static extern string _AI_MATKEY_TEXMAP_AXIS_BASE_get();

  [DllImport("Assimp", EntryPoint="CSharp__AI_MATKEY_UVTRANSFORM_BASE_get")]
  public static extern string _AI_MATKEY_UVTRANSFORM_BASE_get();

  [DllImport("Assimp", EntryPoint="CSharp__AI_MATKEY_TEXFLAGS_BASE_get")]
  public static extern string _AI_MATKEY_TEXFLAGS_BASE_get();

  [DllImport("Assimp", EntryPoint="CSharp_new_aiQuaternion__SWIG_0")]
  public static extern IntPtr new_aiQuaternion__SWIG_0();

  [DllImport("Assimp", EntryPoint="CSharp_new_aiQuaternion__SWIG_1")]
  public static extern IntPtr new_aiQuaternion__SWIG_1(float jarg1, float jarg2, float jarg3, float jarg4);

  [DllImport("Assimp", EntryPoint="CSharp_new_aiQuaternion__SWIG_2")]
  public static extern IntPtr new_aiQuaternion__SWIG_2(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_new_aiQuaternion__SWIG_3")]
  public static extern IntPtr new_aiQuaternion__SWIG_3(float jarg1, float jarg2, float jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_new_aiQuaternion__SWIG_4")]
  public static extern IntPtr new_aiQuaternion__SWIG_4(HandleRef jarg1, float jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_new_aiQuaternion__SWIG_5")]
  public static extern IntPtr new_aiQuaternion__SWIG_5(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiQuaternion_GetMatrix")]
  public static extern IntPtr aiQuaternion_GetMatrix(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiQuaternion___equal__")]
  public static extern bool aiQuaternion___equal__(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiQuaternion___nequal__")]
  public static extern bool aiQuaternion___nequal__(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiQuaternion_Normalize")]
  public static extern IntPtr aiQuaternion_Normalize(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiQuaternion_Conjugate")]
  public static extern IntPtr aiQuaternion_Conjugate(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiQuaternion_Rotate")]
  public static extern IntPtr aiQuaternion_Rotate(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiQuaternion___mul__")]
  public static extern IntPtr aiQuaternion___mul__(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiQuaternion_Interpolate")]
  public static extern void aiQuaternion_Interpolate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, float jarg4);

  [DllImport("Assimp", EntryPoint="CSharp_aiQuaternion_w_set")]
  public static extern void aiQuaternion_w_set(HandleRef jarg1, float jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiQuaternion_w_get")]
  public static extern float aiQuaternion_w_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiQuaternion_x_set")]
  public static extern void aiQuaternion_x_set(HandleRef jarg1, float jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiQuaternion_x_get")]
  public static extern float aiQuaternion_x_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiQuaternion_y_set")]
  public static extern void aiQuaternion_y_set(HandleRef jarg1, float jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiQuaternion_y_get")]
  public static extern float aiQuaternion_y_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiQuaternion_z_set")]
  public static extern void aiQuaternion_z_set(HandleRef jarg1, float jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiQuaternion_z_get")]
  public static extern float aiQuaternion_z_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_delete_aiQuaternion")]
  public static extern void delete_aiQuaternion(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiNode_mName_set")]
  public static extern void aiNode_mName_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiNode_mName_get")]
  public static extern IntPtr aiNode_mName_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiNode_mTransformation_set")]
  public static extern void aiNode_mTransformation_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiNode_mTransformation_get")]
  public static extern IntPtr aiNode_mTransformation_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiNode_mParent_set")]
  public static extern void aiNode_mParent_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiNode_mParent_get")]
  public static extern IntPtr aiNode_mParent_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiNode_mNumChildren_set")]
  public static extern void aiNode_mNumChildren_set(HandleRef jarg1, uint jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiNode_mNumChildren_get")]
  public static extern uint aiNode_mNumChildren_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiNode_mNumMeshes_set")]
  public static extern void aiNode_mNumMeshes_set(HandleRef jarg1, uint jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiNode_mNumMeshes_get")]
  public static extern uint aiNode_mNumMeshes_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_new_aiNode__SWIG_0")]
  public static extern IntPtr new_aiNode__SWIG_0();

  [DllImport("Assimp", EntryPoint="CSharp_new_aiNode__SWIG_1")]
  public static extern IntPtr new_aiNode__SWIG_1(string jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_delete_aiNode")]
  public static extern void delete_aiNode(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiNode_FindNode__SWIG_0")]
  public static extern IntPtr aiNode_FindNode__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiNode_FindNode__SWIG_1")]
  public static extern IntPtr aiNode_FindNode__SWIG_1(HandleRef jarg1, string jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiNode_GetmChildren")]
  public static extern IntPtr aiNode_GetmChildren(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiNode_GetmMeshes")]
  public static extern IntPtr aiNode_GetmMeshes(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_AI_SCENE_FLAGS_INCOMPLETE_get")]
  public static extern int AI_SCENE_FLAGS_INCOMPLETE_get();

  [DllImport("Assimp", EntryPoint="CSharp_AI_SCENE_FLAGS_VALIDATED_get")]
  public static extern int AI_SCENE_FLAGS_VALIDATED_get();

  [DllImport("Assimp", EntryPoint="CSharp_AI_SCENE_FLAGS_VALIDATION_WARNING_get")]
  public static extern int AI_SCENE_FLAGS_VALIDATION_WARNING_get();

  [DllImport("Assimp", EntryPoint="CSharp_AI_SCENE_FLAGS_NON_VERBOSE_FORMAT_get")]
  public static extern int AI_SCENE_FLAGS_NON_VERBOSE_FORMAT_get();

  [DllImport("Assimp", EntryPoint="CSharp_AI_SCENE_FLAGS_TERRAIN_get")]
  public static extern int AI_SCENE_FLAGS_TERRAIN_get();

  [DllImport("Assimp", EntryPoint="CSharp_aiScene_mFlags_set")]
  public static extern void aiScene_mFlags_set(HandleRef jarg1, uint jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiScene_mFlags_get")]
  public static extern uint aiScene_mFlags_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiScene_mRootNode_set")]
  public static extern void aiScene_mRootNode_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiScene_mRootNode_get")]
  public static extern IntPtr aiScene_mRootNode_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiScene_mNumMeshes_set")]
  public static extern void aiScene_mNumMeshes_set(HandleRef jarg1, uint jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiScene_mNumMeshes_get")]
  public static extern uint aiScene_mNumMeshes_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiScene_mNumMaterials_set")]
  public static extern void aiScene_mNumMaterials_set(HandleRef jarg1, uint jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiScene_mNumMaterials_get")]
  public static extern uint aiScene_mNumMaterials_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiScene_mNumAnimations_set")]
  public static extern void aiScene_mNumAnimations_set(HandleRef jarg1, uint jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiScene_mNumAnimations_get")]
  public static extern uint aiScene_mNumAnimations_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiScene_mNumTextures_set")]
  public static extern void aiScene_mNumTextures_set(HandleRef jarg1, uint jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiScene_mNumTextures_get")]
  public static extern uint aiScene_mNumTextures_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiScene_mNumLights_set")]
  public static extern void aiScene_mNumLights_set(HandleRef jarg1, uint jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiScene_mNumLights_get")]
  public static extern uint aiScene_mNumLights_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiScene_mNumCameras_set")]
  public static extern void aiScene_mNumCameras_set(HandleRef jarg1, uint jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiScene_mNumCameras_get")]
  public static extern uint aiScene_mNumCameras_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_new_aiScene")]
  public static extern IntPtr new_aiScene();

  [DllImport("Assimp", EntryPoint="CSharp_delete_aiScene")]
  public static extern void delete_aiScene(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiScene_HasMeshes")]
  public static extern bool aiScene_HasMeshes(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiScene_HasMaterials")]
  public static extern bool aiScene_HasMaterials(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiScene_HasLights")]
  public static extern bool aiScene_HasLights(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiScene_HasTextures")]
  public static extern bool aiScene_HasTextures(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiScene_HasCameras")]
  public static extern bool aiScene_HasCameras(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiScene_HasAnimations")]
  public static extern bool aiScene_HasAnimations(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiScene_GetmAnimations")]
  public static extern IntPtr aiScene_GetmAnimations(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiScene_GetmCameras")]
  public static extern IntPtr aiScene_GetmCameras(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiScene_GetmLights")]
  public static extern IntPtr aiScene_GetmLights(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiScene_GetmMaterials")]
  public static extern IntPtr aiScene_GetmMaterials(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiScene_GetmMeshes")]
  public static extern IntPtr aiScene_GetmMeshes(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiScene_GetmTextures")]
  public static extern IntPtr aiScene_GetmTextures(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiTexel_b_set")]
  public static extern void aiTexel_b_set(HandleRef jarg1, byte jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiTexel_b_get")]
  public static extern byte aiTexel_b_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiTexel_g_set")]
  public static extern void aiTexel_g_set(HandleRef jarg1, byte jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiTexel_g_get")]
  public static extern byte aiTexel_g_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiTexel_r_set")]
  public static extern void aiTexel_r_set(HandleRef jarg1, byte jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiTexel_r_get")]
  public static extern byte aiTexel_r_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiTexel_a_set")]
  public static extern void aiTexel_a_set(HandleRef jarg1, byte jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiTexel_a_get")]
  public static extern byte aiTexel_a_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiTexel___equal__")]
  public static extern bool aiTexel___equal__(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiTexel___nequal__")]
  public static extern bool aiTexel___nequal__(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_new_aiTexel")]
  public static extern IntPtr new_aiTexel();

  [DllImport("Assimp", EntryPoint="CSharp_delete_aiTexel")]
  public static extern void delete_aiTexel(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiTexture_mWidth_set")]
  public static extern void aiTexture_mWidth_set(HandleRef jarg1, uint jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiTexture_mWidth_get")]
  public static extern uint aiTexture_mWidth_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiTexture_mHeight_set")]
  public static extern void aiTexture_mHeight_set(HandleRef jarg1, uint jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiTexture_mHeight_get")]
  public static extern uint aiTexture_mHeight_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiTexture_achFormatHint_set")]
  public static extern void aiTexture_achFormatHint_set(HandleRef jarg1, string jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiTexture_achFormatHint_get")]
  public static extern string aiTexture_achFormatHint_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiTexture_pcData_set")]
  public static extern void aiTexture_pcData_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiTexture_pcData_get")]
  public static extern IntPtr aiTexture_pcData_get(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiTexture_CheckFormat")]
  public static extern bool aiTexture_CheckFormat(HandleRef jarg1, string jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_new_aiTexture")]
  public static extern IntPtr new_aiTexture();

  [DllImport("Assimp", EntryPoint="CSharp_delete_aiTexture")]
  public static extern void delete_aiTexture(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_AI_PROPERTY_WAS_NOT_EXISTING_get")]
  public static extern int AI_PROPERTY_WAS_NOT_EXISTING_get();

  [DllImport("Assimp", EntryPoint="CSharp_aiImportFileFromMemory")]
  public static extern IntPtr aiImportFileFromMemory(string jarg1, uint jarg2, uint jarg3, string jarg4);

  [DllImport("Assimp", EntryPoint="CSharp_new_Importer__SWIG_0")]
  public static extern IntPtr new_Importer__SWIG_0();

  [DllImport("Assimp", EntryPoint="CSharp_new_Importer__SWIG_1")]
  public static extern IntPtr new_Importer__SWIG_1(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_delete_Importer")]
  public static extern void delete_Importer(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_Importer_GetPropertyInteger__SWIG_0")]
  public static extern int Importer_GetPropertyInteger__SWIG_0(HandleRef jarg1, string jarg2, int jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_Importer_GetPropertyInteger__SWIG_1")]
  public static extern int Importer_GetPropertyInteger__SWIG_1(HandleRef jarg1, string jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_Importer_GetPropertyBool__SWIG_0")]
  public static extern bool Importer_GetPropertyBool__SWIG_0(HandleRef jarg1, string jarg2, bool jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_Importer_GetPropertyBool__SWIG_1")]
  public static extern bool Importer_GetPropertyBool__SWIG_1(HandleRef jarg1, string jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_Importer_GetPropertyFloat__SWIG_0")]
  public static extern float Importer_GetPropertyFloat__SWIG_0(HandleRef jarg1, string jarg2, float jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_Importer_GetPropertyFloat__SWIG_1")]
  public static extern float Importer_GetPropertyFloat__SWIG_1(HandleRef jarg1, string jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_Importer_GetPropertyString__SWIG_0")]
  public static extern string Importer_GetPropertyString__SWIG_0(HandleRef jarg1, string jarg2, string jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_Importer_GetPropertyString__SWIG_1")]
  public static extern string Importer_GetPropertyString__SWIG_1(HandleRef jarg1, string jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_Importer_IsDefaultIOHandler")]
  public static extern bool Importer_IsDefaultIOHandler(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_Importer_SetProgressHandler")]
  public static extern void Importer_SetProgressHandler(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_Importer_GetProgressHandler")]
  public static extern IntPtr Importer_GetProgressHandler(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_Importer_IsDefaultProgressHandler")]
  public static extern bool Importer_IsDefaultProgressHandler(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_Importer_ValidateFlags")]
  public static extern bool Importer_ValidateFlags(HandleRef jarg1, uint jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_Importer_ReadFile__SWIG_0")]
  public static extern IntPtr Importer_ReadFile__SWIG_0(HandleRef jarg1, string jarg2, uint jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_Importer_FreeScene")]
  public static extern void Importer_FreeScene(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_Importer_GetErrorString")]
  public static extern string Importer_GetErrorString(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_Importer_IsExtensionSupported__SWIG_0")]
  public static extern bool Importer_IsExtensionSupported__SWIG_0(HandleRef jarg1, string jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_Importer_GetExtensionList__SWIG_0")]
  public static extern void Importer_GetExtensionList__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_Importer_GetExtensionList__SWIG_1")]
  public static extern void Importer_GetExtensionList__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_Importer_GetScene")]
  public static extern IntPtr Importer_GetScene(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_Importer_GetOrphanedScene")]
  public static extern IntPtr Importer_GetOrphanedScene(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_Importer_GetMemoryRequirements")]
  public static extern void Importer_GetMemoryRequirements(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_Importer_SetExtraVerbose")]
  public static extern void Importer_SetExtraVerbose(HandleRef jarg1, bool jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_Importer_GetExtensionList__SWIG_2")]
  public static extern string Importer_GetExtensionList__SWIG_2(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_delete_ProgressHandler")]
  public static extern void delete_ProgressHandler(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_ProgressHandler_Update__SWIG_0")]
  public static extern bool ProgressHandler_Update__SWIG_0(HandleRef jarg1, float jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_ProgressHandler_Update__SWIG_1")]
  public static extern bool ProgressHandler_Update__SWIG_1(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_FloatVector_Clear")]
  public static extern void FloatVector_Clear(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_FloatVector_Add")]
  public static extern void FloatVector_Add(HandleRef jarg1, float jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_FloatVector_size")]
  public static extern uint FloatVector_size(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_FloatVector_capacity")]
  public static extern uint FloatVector_capacity(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_FloatVector_reserve")]
  public static extern void FloatVector_reserve(HandleRef jarg1, uint jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_new_FloatVector__SWIG_0")]
  public static extern IntPtr new_FloatVector__SWIG_0();

  [DllImport("Assimp", EntryPoint="CSharp_new_FloatVector__SWIG_1")]
  public static extern IntPtr new_FloatVector__SWIG_1(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_new_FloatVector__SWIG_2")]
  public static extern IntPtr new_FloatVector__SWIG_2(int jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_FloatVector_getitemcopy")]
  public static extern float FloatVector_getitemcopy(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_FloatVector_getitem")]
  public static extern float FloatVector_getitem(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_FloatVector_setitem")]
  public static extern void FloatVector_setitem(HandleRef jarg1, int jarg2, float jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_FloatVector_AddRange")]
  public static extern void FloatVector_AddRange(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_FloatVector_GetRange")]
  public static extern IntPtr FloatVector_GetRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_FloatVector_Insert")]
  public static extern void FloatVector_Insert(HandleRef jarg1, int jarg2, float jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_FloatVector_InsertRange")]
  public static extern void FloatVector_InsertRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_FloatVector_RemoveAt")]
  public static extern void FloatVector_RemoveAt(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_FloatVector_RemoveRange")]
  public static extern void FloatVector_RemoveRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_FloatVector_Repeat")]
  public static extern IntPtr FloatVector_Repeat(float jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_FloatVector_Reverse__SWIG_0")]
  public static extern void FloatVector_Reverse__SWIG_0(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_FloatVector_Reverse__SWIG_1")]
  public static extern void FloatVector_Reverse__SWIG_1(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_FloatVector_SetRange")]
  public static extern void FloatVector_SetRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_FloatVector_Contains")]
  public static extern bool FloatVector_Contains(HandleRef jarg1, float jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_FloatVector_IndexOf")]
  public static extern int FloatVector_IndexOf(HandleRef jarg1, float jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_FloatVector_LastIndexOf")]
  public static extern int FloatVector_LastIndexOf(HandleRef jarg1, float jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_FloatVector_Remove")]
  public static extern bool FloatVector_Remove(HandleRef jarg1, float jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_delete_FloatVector")]
  public static extern void delete_FloatVector(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_UintVector_Clear")]
  public static extern void UintVector_Clear(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_UintVector_Add")]
  public static extern void UintVector_Add(HandleRef jarg1, uint jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_UintVector_size")]
  public static extern uint UintVector_size(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_UintVector_capacity")]
  public static extern uint UintVector_capacity(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_UintVector_reserve")]
  public static extern void UintVector_reserve(HandleRef jarg1, uint jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_new_UintVector__SWIG_0")]
  public static extern IntPtr new_UintVector__SWIG_0();

  [DllImport("Assimp", EntryPoint="CSharp_new_UintVector__SWIG_1")]
  public static extern IntPtr new_UintVector__SWIG_1(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_new_UintVector__SWIG_2")]
  public static extern IntPtr new_UintVector__SWIG_2(int jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_UintVector_getitemcopy")]
  public static extern uint UintVector_getitemcopy(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_UintVector_getitem")]
  public static extern uint UintVector_getitem(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_UintVector_setitem")]
  public static extern void UintVector_setitem(HandleRef jarg1, int jarg2, uint jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_UintVector_AddRange")]
  public static extern void UintVector_AddRange(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_UintVector_GetRange")]
  public static extern IntPtr UintVector_GetRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_UintVector_Insert")]
  public static extern void UintVector_Insert(HandleRef jarg1, int jarg2, uint jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_UintVector_InsertRange")]
  public static extern void UintVector_InsertRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_UintVector_RemoveAt")]
  public static extern void UintVector_RemoveAt(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_UintVector_RemoveRange")]
  public static extern void UintVector_RemoveRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_UintVector_Repeat")]
  public static extern IntPtr UintVector_Repeat(uint jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_UintVector_Reverse__SWIG_0")]
  public static extern void UintVector_Reverse__SWIG_0(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_UintVector_Reverse__SWIG_1")]
  public static extern void UintVector_Reverse__SWIG_1(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_UintVector_SetRange")]
  public static extern void UintVector_SetRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_UintVector_Contains")]
  public static extern bool UintVector_Contains(HandleRef jarg1, uint jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_UintVector_IndexOf")]
  public static extern int UintVector_IndexOf(HandleRef jarg1, uint jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_UintVector_LastIndexOf")]
  public static extern int UintVector_LastIndexOf(HandleRef jarg1, uint jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_UintVector_Remove")]
  public static extern bool UintVector_Remove(HandleRef jarg1, uint jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_delete_UintVector")]
  public static extern void delete_UintVector(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiAnimationVector_Clear")]
  public static extern void aiAnimationVector_Clear(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiAnimationVector_Add")]
  public static extern void aiAnimationVector_Add(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiAnimationVector_size")]
  public static extern uint aiAnimationVector_size(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiAnimationVector_capacity")]
  public static extern uint aiAnimationVector_capacity(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiAnimationVector_reserve")]
  public static extern void aiAnimationVector_reserve(HandleRef jarg1, uint jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_new_aiAnimationVector__SWIG_0")]
  public static extern IntPtr new_aiAnimationVector__SWIG_0();

  [DllImport("Assimp", EntryPoint="CSharp_new_aiAnimationVector__SWIG_1")]
  public static extern IntPtr new_aiAnimationVector__SWIG_1(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_new_aiAnimationVector__SWIG_2")]
  public static extern IntPtr new_aiAnimationVector__SWIG_2(int jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiAnimationVector_getitemcopy")]
  public static extern IntPtr aiAnimationVector_getitemcopy(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiAnimationVector_getitem")]
  public static extern IntPtr aiAnimationVector_getitem(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiAnimationVector_setitem")]
  public static extern void aiAnimationVector_setitem(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiAnimationVector_AddRange")]
  public static extern void aiAnimationVector_AddRange(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiAnimationVector_GetRange")]
  public static extern IntPtr aiAnimationVector_GetRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiAnimationVector_Insert")]
  public static extern void aiAnimationVector_Insert(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiAnimationVector_InsertRange")]
  public static extern void aiAnimationVector_InsertRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiAnimationVector_RemoveAt")]
  public static extern void aiAnimationVector_RemoveAt(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiAnimationVector_RemoveRange")]
  public static extern void aiAnimationVector_RemoveRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiAnimationVector_Repeat")]
  public static extern IntPtr aiAnimationVector_Repeat(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiAnimationVector_Reverse__SWIG_0")]
  public static extern void aiAnimationVector_Reverse__SWIG_0(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiAnimationVector_Reverse__SWIG_1")]
  public static extern void aiAnimationVector_Reverse__SWIG_1(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiAnimationVector_SetRange")]
  public static extern void aiAnimationVector_SetRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiAnimationVector_Contains")]
  public static extern bool aiAnimationVector_Contains(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiAnimationVector_IndexOf")]
  public static extern int aiAnimationVector_IndexOf(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiAnimationVector_LastIndexOf")]
  public static extern int aiAnimationVector_LastIndexOf(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiAnimationVector_Remove")]
  public static extern bool aiAnimationVector_Remove(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_delete_aiAnimationVector")]
  public static extern void delete_aiAnimationVector(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiAnimMeshVector_Clear")]
  public static extern void aiAnimMeshVector_Clear(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiAnimMeshVector_Add")]
  public static extern void aiAnimMeshVector_Add(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiAnimMeshVector_size")]
  public static extern uint aiAnimMeshVector_size(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiAnimMeshVector_capacity")]
  public static extern uint aiAnimMeshVector_capacity(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiAnimMeshVector_reserve")]
  public static extern void aiAnimMeshVector_reserve(HandleRef jarg1, uint jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_new_aiAnimMeshVector__SWIG_0")]
  public static extern IntPtr new_aiAnimMeshVector__SWIG_0();

  [DllImport("Assimp", EntryPoint="CSharp_new_aiAnimMeshVector__SWIG_1")]
  public static extern IntPtr new_aiAnimMeshVector__SWIG_1(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_new_aiAnimMeshVector__SWIG_2")]
  public static extern IntPtr new_aiAnimMeshVector__SWIG_2(int jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiAnimMeshVector_getitemcopy")]
  public static extern IntPtr aiAnimMeshVector_getitemcopy(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiAnimMeshVector_getitem")]
  public static extern IntPtr aiAnimMeshVector_getitem(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiAnimMeshVector_setitem")]
  public static extern void aiAnimMeshVector_setitem(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiAnimMeshVector_AddRange")]
  public static extern void aiAnimMeshVector_AddRange(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiAnimMeshVector_GetRange")]
  public static extern IntPtr aiAnimMeshVector_GetRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiAnimMeshVector_Insert")]
  public static extern void aiAnimMeshVector_Insert(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiAnimMeshVector_InsertRange")]
  public static extern void aiAnimMeshVector_InsertRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiAnimMeshVector_RemoveAt")]
  public static extern void aiAnimMeshVector_RemoveAt(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiAnimMeshVector_RemoveRange")]
  public static extern void aiAnimMeshVector_RemoveRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiAnimMeshVector_Repeat")]
  public static extern IntPtr aiAnimMeshVector_Repeat(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiAnimMeshVector_Reverse__SWIG_0")]
  public static extern void aiAnimMeshVector_Reverse__SWIG_0(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiAnimMeshVector_Reverse__SWIG_1")]
  public static extern void aiAnimMeshVector_Reverse__SWIG_1(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiAnimMeshVector_SetRange")]
  public static extern void aiAnimMeshVector_SetRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiAnimMeshVector_Contains")]
  public static extern bool aiAnimMeshVector_Contains(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiAnimMeshVector_IndexOf")]
  public static extern int aiAnimMeshVector_IndexOf(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiAnimMeshVector_LastIndexOf")]
  public static extern int aiAnimMeshVector_LastIndexOf(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiAnimMeshVector_Remove")]
  public static extern bool aiAnimMeshVector_Remove(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_delete_aiAnimMeshVector")]
  public static extern void delete_aiAnimMeshVector(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiBoneVector_Clear")]
  public static extern void aiBoneVector_Clear(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiBoneVector_Add")]
  public static extern void aiBoneVector_Add(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiBoneVector_size")]
  public static extern uint aiBoneVector_size(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiBoneVector_capacity")]
  public static extern uint aiBoneVector_capacity(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiBoneVector_reserve")]
  public static extern void aiBoneVector_reserve(HandleRef jarg1, uint jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_new_aiBoneVector__SWIG_0")]
  public static extern IntPtr new_aiBoneVector__SWIG_0();

  [DllImport("Assimp", EntryPoint="CSharp_new_aiBoneVector__SWIG_1")]
  public static extern IntPtr new_aiBoneVector__SWIG_1(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_new_aiBoneVector__SWIG_2")]
  public static extern IntPtr new_aiBoneVector__SWIG_2(int jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiBoneVector_getitemcopy")]
  public static extern IntPtr aiBoneVector_getitemcopy(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiBoneVector_getitem")]
  public static extern IntPtr aiBoneVector_getitem(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiBoneVector_setitem")]
  public static extern void aiBoneVector_setitem(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiBoneVector_AddRange")]
  public static extern void aiBoneVector_AddRange(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiBoneVector_GetRange")]
  public static extern IntPtr aiBoneVector_GetRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiBoneVector_Insert")]
  public static extern void aiBoneVector_Insert(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiBoneVector_InsertRange")]
  public static extern void aiBoneVector_InsertRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiBoneVector_RemoveAt")]
  public static extern void aiBoneVector_RemoveAt(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiBoneVector_RemoveRange")]
  public static extern void aiBoneVector_RemoveRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiBoneVector_Repeat")]
  public static extern IntPtr aiBoneVector_Repeat(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiBoneVector_Reverse__SWIG_0")]
  public static extern void aiBoneVector_Reverse__SWIG_0(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiBoneVector_Reverse__SWIG_1")]
  public static extern void aiBoneVector_Reverse__SWIG_1(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiBoneVector_SetRange")]
  public static extern void aiBoneVector_SetRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiBoneVector_Contains")]
  public static extern bool aiBoneVector_Contains(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiBoneVector_IndexOf")]
  public static extern int aiBoneVector_IndexOf(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiBoneVector_LastIndexOf")]
  public static extern int aiBoneVector_LastIndexOf(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiBoneVector_Remove")]
  public static extern bool aiBoneVector_Remove(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_delete_aiBoneVector")]
  public static extern void delete_aiBoneVector(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiCameraVector_Clear")]
  public static extern void aiCameraVector_Clear(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiCameraVector_Add")]
  public static extern void aiCameraVector_Add(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiCameraVector_size")]
  public static extern uint aiCameraVector_size(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiCameraVector_capacity")]
  public static extern uint aiCameraVector_capacity(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiCameraVector_reserve")]
  public static extern void aiCameraVector_reserve(HandleRef jarg1, uint jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_new_aiCameraVector__SWIG_0")]
  public static extern IntPtr new_aiCameraVector__SWIG_0();

  [DllImport("Assimp", EntryPoint="CSharp_new_aiCameraVector__SWIG_1")]
  public static extern IntPtr new_aiCameraVector__SWIG_1(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_new_aiCameraVector__SWIG_2")]
  public static extern IntPtr new_aiCameraVector__SWIG_2(int jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiCameraVector_getitemcopy")]
  public static extern IntPtr aiCameraVector_getitemcopy(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiCameraVector_getitem")]
  public static extern IntPtr aiCameraVector_getitem(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiCameraVector_setitem")]
  public static extern void aiCameraVector_setitem(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiCameraVector_AddRange")]
  public static extern void aiCameraVector_AddRange(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiCameraVector_GetRange")]
  public static extern IntPtr aiCameraVector_GetRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiCameraVector_Insert")]
  public static extern void aiCameraVector_Insert(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiCameraVector_InsertRange")]
  public static extern void aiCameraVector_InsertRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiCameraVector_RemoveAt")]
  public static extern void aiCameraVector_RemoveAt(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiCameraVector_RemoveRange")]
  public static extern void aiCameraVector_RemoveRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiCameraVector_Repeat")]
  public static extern IntPtr aiCameraVector_Repeat(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiCameraVector_Reverse__SWIG_0")]
  public static extern void aiCameraVector_Reverse__SWIG_0(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiCameraVector_Reverse__SWIG_1")]
  public static extern void aiCameraVector_Reverse__SWIG_1(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiCameraVector_SetRange")]
  public static extern void aiCameraVector_SetRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiCameraVector_Contains")]
  public static extern bool aiCameraVector_Contains(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiCameraVector_IndexOf")]
  public static extern int aiCameraVector_IndexOf(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiCameraVector_LastIndexOf")]
  public static extern int aiCameraVector_LastIndexOf(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiCameraVector_Remove")]
  public static extern bool aiCameraVector_Remove(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_delete_aiCameraVector")]
  public static extern void delete_aiCameraVector(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiColor4DVectorVector_Clear")]
  public static extern void aiColor4DVectorVector_Clear(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiColor4DVectorVector_Add")]
  public static extern void aiColor4DVectorVector_Add(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiColor4DVectorVector_size")]
  public static extern uint aiColor4DVectorVector_size(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiColor4DVectorVector_capacity")]
  public static extern uint aiColor4DVectorVector_capacity(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiColor4DVectorVector_reserve")]
  public static extern void aiColor4DVectorVector_reserve(HandleRef jarg1, uint jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_new_aiColor4DVectorVector__SWIG_0")]
  public static extern IntPtr new_aiColor4DVectorVector__SWIG_0();

  [DllImport("Assimp", EntryPoint="CSharp_new_aiColor4DVectorVector__SWIG_1")]
  public static extern IntPtr new_aiColor4DVectorVector__SWIG_1(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_new_aiColor4DVectorVector__SWIG_2")]
  public static extern IntPtr new_aiColor4DVectorVector__SWIG_2(int jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiColor4DVectorVector_getitemcopy")]
  public static extern IntPtr aiColor4DVectorVector_getitemcopy(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiColor4DVectorVector_getitem")]
  public static extern IntPtr aiColor4DVectorVector_getitem(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiColor4DVectorVector_setitem")]
  public static extern void aiColor4DVectorVector_setitem(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiColor4DVectorVector_AddRange")]
  public static extern void aiColor4DVectorVector_AddRange(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiColor4DVectorVector_GetRange")]
  public static extern IntPtr aiColor4DVectorVector_GetRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiColor4DVectorVector_Insert")]
  public static extern void aiColor4DVectorVector_Insert(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiColor4DVectorVector_InsertRange")]
  public static extern void aiColor4DVectorVector_InsertRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiColor4DVectorVector_RemoveAt")]
  public static extern void aiColor4DVectorVector_RemoveAt(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiColor4DVectorVector_RemoveRange")]
  public static extern void aiColor4DVectorVector_RemoveRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiColor4DVectorVector_Repeat")]
  public static extern IntPtr aiColor4DVectorVector_Repeat(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiColor4DVectorVector_Reverse__SWIG_0")]
  public static extern void aiColor4DVectorVector_Reverse__SWIG_0(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiColor4DVectorVector_Reverse__SWIG_1")]
  public static extern void aiColor4DVectorVector_Reverse__SWIG_1(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiColor4DVectorVector_SetRange")]
  public static extern void aiColor4DVectorVector_SetRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_delete_aiColor4DVectorVector")]
  public static extern void delete_aiColor4DVectorVector(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiColor4DVector_Clear")]
  public static extern void aiColor4DVector_Clear(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiColor4DVector_Add")]
  public static extern void aiColor4DVector_Add(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiColor4DVector_size")]
  public static extern uint aiColor4DVector_size(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiColor4DVector_capacity")]
  public static extern uint aiColor4DVector_capacity(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiColor4DVector_reserve")]
  public static extern void aiColor4DVector_reserve(HandleRef jarg1, uint jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_new_aiColor4DVector__SWIG_0")]
  public static extern IntPtr new_aiColor4DVector__SWIG_0();

  [DllImport("Assimp", EntryPoint="CSharp_new_aiColor4DVector__SWIG_1")]
  public static extern IntPtr new_aiColor4DVector__SWIG_1(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_new_aiColor4DVector__SWIG_2")]
  public static extern IntPtr new_aiColor4DVector__SWIG_2(int jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiColor4DVector_getitemcopy")]
  public static extern IntPtr aiColor4DVector_getitemcopy(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiColor4DVector_getitem")]
  public static extern IntPtr aiColor4DVector_getitem(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiColor4DVector_setitem")]
  public static extern void aiColor4DVector_setitem(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiColor4DVector_AddRange")]
  public static extern void aiColor4DVector_AddRange(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiColor4DVector_GetRange")]
  public static extern IntPtr aiColor4DVector_GetRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiColor4DVector_Insert")]
  public static extern void aiColor4DVector_Insert(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiColor4DVector_InsertRange")]
  public static extern void aiColor4DVector_InsertRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiColor4DVector_RemoveAt")]
  public static extern void aiColor4DVector_RemoveAt(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiColor4DVector_RemoveRange")]
  public static extern void aiColor4DVector_RemoveRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiColor4DVector_Repeat")]
  public static extern IntPtr aiColor4DVector_Repeat(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiColor4DVector_Reverse__SWIG_0")]
  public static extern void aiColor4DVector_Reverse__SWIG_0(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiColor4DVector_Reverse__SWIG_1")]
  public static extern void aiColor4DVector_Reverse__SWIG_1(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiColor4DVector_SetRange")]
  public static extern void aiColor4DVector_SetRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiColor4DVector_Contains")]
  public static extern bool aiColor4DVector_Contains(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiColor4DVector_IndexOf")]
  public static extern int aiColor4DVector_IndexOf(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiColor4DVector_LastIndexOf")]
  public static extern int aiColor4DVector_LastIndexOf(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiColor4DVector_Remove")]
  public static extern bool aiColor4DVector_Remove(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_delete_aiColor4DVector")]
  public static extern void delete_aiColor4DVector(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiFaceVector_Clear")]
  public static extern void aiFaceVector_Clear(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiFaceVector_Add")]
  public static extern void aiFaceVector_Add(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiFaceVector_size")]
  public static extern uint aiFaceVector_size(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiFaceVector_capacity")]
  public static extern uint aiFaceVector_capacity(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiFaceVector_reserve")]
  public static extern void aiFaceVector_reserve(HandleRef jarg1, uint jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_new_aiFaceVector__SWIG_0")]
  public static extern IntPtr new_aiFaceVector__SWIG_0();

  [DllImport("Assimp", EntryPoint="CSharp_new_aiFaceVector__SWIG_1")]
  public static extern IntPtr new_aiFaceVector__SWIG_1(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_new_aiFaceVector__SWIG_2")]
  public static extern IntPtr new_aiFaceVector__SWIG_2(int jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiFaceVector_getitemcopy")]
  public static extern IntPtr aiFaceVector_getitemcopy(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiFaceVector_getitem")]
  public static extern IntPtr aiFaceVector_getitem(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiFaceVector_setitem")]
  public static extern void aiFaceVector_setitem(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiFaceVector_AddRange")]
  public static extern void aiFaceVector_AddRange(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiFaceVector_GetRange")]
  public static extern IntPtr aiFaceVector_GetRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiFaceVector_Insert")]
  public static extern void aiFaceVector_Insert(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiFaceVector_InsertRange")]
  public static extern void aiFaceVector_InsertRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiFaceVector_RemoveAt")]
  public static extern void aiFaceVector_RemoveAt(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiFaceVector_RemoveRange")]
  public static extern void aiFaceVector_RemoveRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiFaceVector_Repeat")]
  public static extern IntPtr aiFaceVector_Repeat(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiFaceVector_Reverse__SWIG_0")]
  public static extern void aiFaceVector_Reverse__SWIG_0(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiFaceVector_Reverse__SWIG_1")]
  public static extern void aiFaceVector_Reverse__SWIG_1(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiFaceVector_SetRange")]
  public static extern void aiFaceVector_SetRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiFaceVector_Contains")]
  public static extern bool aiFaceVector_Contains(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiFaceVector_IndexOf")]
  public static extern int aiFaceVector_IndexOf(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiFaceVector_LastIndexOf")]
  public static extern int aiFaceVector_LastIndexOf(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiFaceVector_Remove")]
  public static extern bool aiFaceVector_Remove(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_delete_aiFaceVector")]
  public static extern void delete_aiFaceVector(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiLightVector_Clear")]
  public static extern void aiLightVector_Clear(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiLightVector_Add")]
  public static extern void aiLightVector_Add(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiLightVector_size")]
  public static extern uint aiLightVector_size(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiLightVector_capacity")]
  public static extern uint aiLightVector_capacity(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiLightVector_reserve")]
  public static extern void aiLightVector_reserve(HandleRef jarg1, uint jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_new_aiLightVector__SWIG_0")]
  public static extern IntPtr new_aiLightVector__SWIG_0();

  [DllImport("Assimp", EntryPoint="CSharp_new_aiLightVector__SWIG_1")]
  public static extern IntPtr new_aiLightVector__SWIG_1(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_new_aiLightVector__SWIG_2")]
  public static extern IntPtr new_aiLightVector__SWIG_2(int jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiLightVector_getitemcopy")]
  public static extern IntPtr aiLightVector_getitemcopy(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiLightVector_getitem")]
  public static extern IntPtr aiLightVector_getitem(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiLightVector_setitem")]
  public static extern void aiLightVector_setitem(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiLightVector_AddRange")]
  public static extern void aiLightVector_AddRange(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiLightVector_GetRange")]
  public static extern IntPtr aiLightVector_GetRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiLightVector_Insert")]
  public static extern void aiLightVector_Insert(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiLightVector_InsertRange")]
  public static extern void aiLightVector_InsertRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiLightVector_RemoveAt")]
  public static extern void aiLightVector_RemoveAt(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiLightVector_RemoveRange")]
  public static extern void aiLightVector_RemoveRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiLightVector_Repeat")]
  public static extern IntPtr aiLightVector_Repeat(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiLightVector_Reverse__SWIG_0")]
  public static extern void aiLightVector_Reverse__SWIG_0(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiLightVector_Reverse__SWIG_1")]
  public static extern void aiLightVector_Reverse__SWIG_1(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiLightVector_SetRange")]
  public static extern void aiLightVector_SetRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiLightVector_Contains")]
  public static extern bool aiLightVector_Contains(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiLightVector_IndexOf")]
  public static extern int aiLightVector_IndexOf(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiLightVector_LastIndexOf")]
  public static extern int aiLightVector_LastIndexOf(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiLightVector_Remove")]
  public static extern bool aiLightVector_Remove(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_delete_aiLightVector")]
  public static extern void delete_aiLightVector(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMaterialVector_Clear")]
  public static extern void aiMaterialVector_Clear(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMaterialVector_Add")]
  public static extern void aiMaterialVector_Add(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMaterialVector_size")]
  public static extern uint aiMaterialVector_size(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMaterialVector_capacity")]
  public static extern uint aiMaterialVector_capacity(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMaterialVector_reserve")]
  public static extern void aiMaterialVector_reserve(HandleRef jarg1, uint jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_new_aiMaterialVector__SWIG_0")]
  public static extern IntPtr new_aiMaterialVector__SWIG_0();

  [DllImport("Assimp", EntryPoint="CSharp_new_aiMaterialVector__SWIG_1")]
  public static extern IntPtr new_aiMaterialVector__SWIG_1(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_new_aiMaterialVector__SWIG_2")]
  public static extern IntPtr new_aiMaterialVector__SWIG_2(int jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMaterialVector_getitemcopy")]
  public static extern IntPtr aiMaterialVector_getitemcopy(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMaterialVector_getitem")]
  public static extern IntPtr aiMaterialVector_getitem(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMaterialVector_setitem")]
  public static extern void aiMaterialVector_setitem(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiMaterialVector_AddRange")]
  public static extern void aiMaterialVector_AddRange(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMaterialVector_GetRange")]
  public static extern IntPtr aiMaterialVector_GetRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiMaterialVector_Insert")]
  public static extern void aiMaterialVector_Insert(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiMaterialVector_InsertRange")]
  public static extern void aiMaterialVector_InsertRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiMaterialVector_RemoveAt")]
  public static extern void aiMaterialVector_RemoveAt(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMaterialVector_RemoveRange")]
  public static extern void aiMaterialVector_RemoveRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiMaterialVector_Repeat")]
  public static extern IntPtr aiMaterialVector_Repeat(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMaterialVector_Reverse__SWIG_0")]
  public static extern void aiMaterialVector_Reverse__SWIG_0(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMaterialVector_Reverse__SWIG_1")]
  public static extern void aiMaterialVector_Reverse__SWIG_1(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiMaterialVector_SetRange")]
  public static extern void aiMaterialVector_SetRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiMaterialVector_Contains")]
  public static extern bool aiMaterialVector_Contains(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMaterialVector_IndexOf")]
  public static extern int aiMaterialVector_IndexOf(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMaterialVector_LastIndexOf")]
  public static extern int aiMaterialVector_LastIndexOf(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMaterialVector_Remove")]
  public static extern bool aiMaterialVector_Remove(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_delete_aiMaterialVector")]
  public static extern void delete_aiMaterialVector(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMeshAnimVector_Clear")]
  public static extern void aiMeshAnimVector_Clear(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMeshAnimVector_Add")]
  public static extern void aiMeshAnimVector_Add(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMeshAnimVector_size")]
  public static extern uint aiMeshAnimVector_size(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMeshAnimVector_capacity")]
  public static extern uint aiMeshAnimVector_capacity(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMeshAnimVector_reserve")]
  public static extern void aiMeshAnimVector_reserve(HandleRef jarg1, uint jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_new_aiMeshAnimVector__SWIG_0")]
  public static extern IntPtr new_aiMeshAnimVector__SWIG_0();

  [DllImport("Assimp", EntryPoint="CSharp_new_aiMeshAnimVector__SWIG_1")]
  public static extern IntPtr new_aiMeshAnimVector__SWIG_1(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_new_aiMeshAnimVector__SWIG_2")]
  public static extern IntPtr new_aiMeshAnimVector__SWIG_2(int jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMeshAnimVector_getitemcopy")]
  public static extern IntPtr aiMeshAnimVector_getitemcopy(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMeshAnimVector_getitem")]
  public static extern IntPtr aiMeshAnimVector_getitem(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMeshAnimVector_setitem")]
  public static extern void aiMeshAnimVector_setitem(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiMeshAnimVector_AddRange")]
  public static extern void aiMeshAnimVector_AddRange(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMeshAnimVector_GetRange")]
  public static extern IntPtr aiMeshAnimVector_GetRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiMeshAnimVector_Insert")]
  public static extern void aiMeshAnimVector_Insert(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiMeshAnimVector_InsertRange")]
  public static extern void aiMeshAnimVector_InsertRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiMeshAnimVector_RemoveAt")]
  public static extern void aiMeshAnimVector_RemoveAt(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMeshAnimVector_RemoveRange")]
  public static extern void aiMeshAnimVector_RemoveRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiMeshAnimVector_Repeat")]
  public static extern IntPtr aiMeshAnimVector_Repeat(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMeshAnimVector_Reverse__SWIG_0")]
  public static extern void aiMeshAnimVector_Reverse__SWIG_0(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMeshAnimVector_Reverse__SWIG_1")]
  public static extern void aiMeshAnimVector_Reverse__SWIG_1(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiMeshAnimVector_SetRange")]
  public static extern void aiMeshAnimVector_SetRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiMeshAnimVector_Contains")]
  public static extern bool aiMeshAnimVector_Contains(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMeshAnimVector_IndexOf")]
  public static extern int aiMeshAnimVector_IndexOf(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMeshAnimVector_LastIndexOf")]
  public static extern int aiMeshAnimVector_LastIndexOf(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMeshAnimVector_Remove")]
  public static extern bool aiMeshAnimVector_Remove(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_delete_aiMeshAnimVector")]
  public static extern void delete_aiMeshAnimVector(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMeshKeyVector_Clear")]
  public static extern void aiMeshKeyVector_Clear(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMeshKeyVector_Add")]
  public static extern void aiMeshKeyVector_Add(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMeshKeyVector_size")]
  public static extern uint aiMeshKeyVector_size(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMeshKeyVector_capacity")]
  public static extern uint aiMeshKeyVector_capacity(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMeshKeyVector_reserve")]
  public static extern void aiMeshKeyVector_reserve(HandleRef jarg1, uint jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_new_aiMeshKeyVector__SWIG_0")]
  public static extern IntPtr new_aiMeshKeyVector__SWIG_0();

  [DllImport("Assimp", EntryPoint="CSharp_new_aiMeshKeyVector__SWIG_1")]
  public static extern IntPtr new_aiMeshKeyVector__SWIG_1(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_new_aiMeshKeyVector__SWIG_2")]
  public static extern IntPtr new_aiMeshKeyVector__SWIG_2(int jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMeshKeyVector_getitemcopy")]
  public static extern IntPtr aiMeshKeyVector_getitemcopy(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMeshKeyVector_getitem")]
  public static extern IntPtr aiMeshKeyVector_getitem(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMeshKeyVector_setitem")]
  public static extern void aiMeshKeyVector_setitem(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiMeshKeyVector_AddRange")]
  public static extern void aiMeshKeyVector_AddRange(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMeshKeyVector_GetRange")]
  public static extern IntPtr aiMeshKeyVector_GetRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiMeshKeyVector_Insert")]
  public static extern void aiMeshKeyVector_Insert(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiMeshKeyVector_InsertRange")]
  public static extern void aiMeshKeyVector_InsertRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiMeshKeyVector_RemoveAt")]
  public static extern void aiMeshKeyVector_RemoveAt(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMeshKeyVector_RemoveRange")]
  public static extern void aiMeshKeyVector_RemoveRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiMeshKeyVector_Repeat")]
  public static extern IntPtr aiMeshKeyVector_Repeat(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMeshKeyVector_Reverse__SWIG_0")]
  public static extern void aiMeshKeyVector_Reverse__SWIG_0(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMeshKeyVector_Reverse__SWIG_1")]
  public static extern void aiMeshKeyVector_Reverse__SWIG_1(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiMeshKeyVector_SetRange")]
  public static extern void aiMeshKeyVector_SetRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiMeshKeyVector_Contains")]
  public static extern bool aiMeshKeyVector_Contains(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMeshKeyVector_IndexOf")]
  public static extern int aiMeshKeyVector_IndexOf(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMeshKeyVector_LastIndexOf")]
  public static extern int aiMeshKeyVector_LastIndexOf(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMeshKeyVector_Remove")]
  public static extern bool aiMeshKeyVector_Remove(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_delete_aiMeshKeyVector")]
  public static extern void delete_aiMeshKeyVector(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMeshVector_Clear")]
  public static extern void aiMeshVector_Clear(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMeshVector_Add")]
  public static extern void aiMeshVector_Add(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMeshVector_size")]
  public static extern uint aiMeshVector_size(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMeshVector_capacity")]
  public static extern uint aiMeshVector_capacity(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMeshVector_reserve")]
  public static extern void aiMeshVector_reserve(HandleRef jarg1, uint jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_new_aiMeshVector__SWIG_0")]
  public static extern IntPtr new_aiMeshVector__SWIG_0();

  [DllImport("Assimp", EntryPoint="CSharp_new_aiMeshVector__SWIG_1")]
  public static extern IntPtr new_aiMeshVector__SWIG_1(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_new_aiMeshVector__SWIG_2")]
  public static extern IntPtr new_aiMeshVector__SWIG_2(int jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMeshVector_getitemcopy")]
  public static extern IntPtr aiMeshVector_getitemcopy(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMeshVector_getitem")]
  public static extern IntPtr aiMeshVector_getitem(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMeshVector_setitem")]
  public static extern void aiMeshVector_setitem(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiMeshVector_AddRange")]
  public static extern void aiMeshVector_AddRange(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMeshVector_GetRange")]
  public static extern IntPtr aiMeshVector_GetRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiMeshVector_Insert")]
  public static extern void aiMeshVector_Insert(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiMeshVector_InsertRange")]
  public static extern void aiMeshVector_InsertRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiMeshVector_RemoveAt")]
  public static extern void aiMeshVector_RemoveAt(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMeshVector_RemoveRange")]
  public static extern void aiMeshVector_RemoveRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiMeshVector_Repeat")]
  public static extern IntPtr aiMeshVector_Repeat(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMeshVector_Reverse__SWIG_0")]
  public static extern void aiMeshVector_Reverse__SWIG_0(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiMeshVector_Reverse__SWIG_1")]
  public static extern void aiMeshVector_Reverse__SWIG_1(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiMeshVector_SetRange")]
  public static extern void aiMeshVector_SetRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiMeshVector_Contains")]
  public static extern bool aiMeshVector_Contains(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMeshVector_IndexOf")]
  public static extern int aiMeshVector_IndexOf(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMeshVector_LastIndexOf")]
  public static extern int aiMeshVector_LastIndexOf(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiMeshVector_Remove")]
  public static extern bool aiMeshVector_Remove(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_delete_aiMeshVector")]
  public static extern void delete_aiMeshVector(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiNodeVector_Clear")]
  public static extern void aiNodeVector_Clear(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiNodeVector_Add")]
  public static extern void aiNodeVector_Add(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiNodeVector_size")]
  public static extern uint aiNodeVector_size(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiNodeVector_capacity")]
  public static extern uint aiNodeVector_capacity(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiNodeVector_reserve")]
  public static extern void aiNodeVector_reserve(HandleRef jarg1, uint jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_new_aiNodeVector__SWIG_0")]
  public static extern IntPtr new_aiNodeVector__SWIG_0();

  [DllImport("Assimp", EntryPoint="CSharp_new_aiNodeVector__SWIG_1")]
  public static extern IntPtr new_aiNodeVector__SWIG_1(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_new_aiNodeVector__SWIG_2")]
  public static extern IntPtr new_aiNodeVector__SWIG_2(int jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiNodeVector_getitemcopy")]
  public static extern IntPtr aiNodeVector_getitemcopy(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiNodeVector_getitem")]
  public static extern IntPtr aiNodeVector_getitem(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiNodeVector_setitem")]
  public static extern void aiNodeVector_setitem(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiNodeVector_AddRange")]
  public static extern void aiNodeVector_AddRange(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiNodeVector_GetRange")]
  public static extern IntPtr aiNodeVector_GetRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiNodeVector_Insert")]
  public static extern void aiNodeVector_Insert(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiNodeVector_InsertRange")]
  public static extern void aiNodeVector_InsertRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiNodeVector_RemoveAt")]
  public static extern void aiNodeVector_RemoveAt(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiNodeVector_RemoveRange")]
  public static extern void aiNodeVector_RemoveRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiNodeVector_Repeat")]
  public static extern IntPtr aiNodeVector_Repeat(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiNodeVector_Reverse__SWIG_0")]
  public static extern void aiNodeVector_Reverse__SWIG_0(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiNodeVector_Reverse__SWIG_1")]
  public static extern void aiNodeVector_Reverse__SWIG_1(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiNodeVector_SetRange")]
  public static extern void aiNodeVector_SetRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiNodeVector_Contains")]
  public static extern bool aiNodeVector_Contains(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiNodeVector_IndexOf")]
  public static extern int aiNodeVector_IndexOf(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiNodeVector_LastIndexOf")]
  public static extern int aiNodeVector_LastIndexOf(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiNodeVector_Remove")]
  public static extern bool aiNodeVector_Remove(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_delete_aiNodeVector")]
  public static extern void delete_aiNodeVector(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiNodeAnimVector_Clear")]
  public static extern void aiNodeAnimVector_Clear(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiNodeAnimVector_Add")]
  public static extern void aiNodeAnimVector_Add(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiNodeAnimVector_size")]
  public static extern uint aiNodeAnimVector_size(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiNodeAnimVector_capacity")]
  public static extern uint aiNodeAnimVector_capacity(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiNodeAnimVector_reserve")]
  public static extern void aiNodeAnimVector_reserve(HandleRef jarg1, uint jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_new_aiNodeAnimVector__SWIG_0")]
  public static extern IntPtr new_aiNodeAnimVector__SWIG_0();

  [DllImport("Assimp", EntryPoint="CSharp_new_aiNodeAnimVector__SWIG_1")]
  public static extern IntPtr new_aiNodeAnimVector__SWIG_1(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_new_aiNodeAnimVector__SWIG_2")]
  public static extern IntPtr new_aiNodeAnimVector__SWIG_2(int jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiNodeAnimVector_getitemcopy")]
  public static extern IntPtr aiNodeAnimVector_getitemcopy(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiNodeAnimVector_getitem")]
  public static extern IntPtr aiNodeAnimVector_getitem(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiNodeAnimVector_setitem")]
  public static extern void aiNodeAnimVector_setitem(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiNodeAnimVector_AddRange")]
  public static extern void aiNodeAnimVector_AddRange(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiNodeAnimVector_GetRange")]
  public static extern IntPtr aiNodeAnimVector_GetRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiNodeAnimVector_Insert")]
  public static extern void aiNodeAnimVector_Insert(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiNodeAnimVector_InsertRange")]
  public static extern void aiNodeAnimVector_InsertRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiNodeAnimVector_RemoveAt")]
  public static extern void aiNodeAnimVector_RemoveAt(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiNodeAnimVector_RemoveRange")]
  public static extern void aiNodeAnimVector_RemoveRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiNodeAnimVector_Repeat")]
  public static extern IntPtr aiNodeAnimVector_Repeat(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiNodeAnimVector_Reverse__SWIG_0")]
  public static extern void aiNodeAnimVector_Reverse__SWIG_0(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiNodeAnimVector_Reverse__SWIG_1")]
  public static extern void aiNodeAnimVector_Reverse__SWIG_1(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiNodeAnimVector_SetRange")]
  public static extern void aiNodeAnimVector_SetRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiNodeAnimVector_Contains")]
  public static extern bool aiNodeAnimVector_Contains(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiNodeAnimVector_IndexOf")]
  public static extern int aiNodeAnimVector_IndexOf(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiNodeAnimVector_LastIndexOf")]
  public static extern int aiNodeAnimVector_LastIndexOf(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiNodeAnimVector_Remove")]
  public static extern bool aiNodeAnimVector_Remove(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_delete_aiNodeAnimVector")]
  public static extern void delete_aiNodeAnimVector(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiQuatKeyVector_Clear")]
  public static extern void aiQuatKeyVector_Clear(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiQuatKeyVector_Add")]
  public static extern void aiQuatKeyVector_Add(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiQuatKeyVector_size")]
  public static extern uint aiQuatKeyVector_size(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiQuatKeyVector_capacity")]
  public static extern uint aiQuatKeyVector_capacity(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiQuatKeyVector_reserve")]
  public static extern void aiQuatKeyVector_reserve(HandleRef jarg1, uint jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_new_aiQuatKeyVector__SWIG_0")]
  public static extern IntPtr new_aiQuatKeyVector__SWIG_0();

  [DllImport("Assimp", EntryPoint="CSharp_new_aiQuatKeyVector__SWIG_1")]
  public static extern IntPtr new_aiQuatKeyVector__SWIG_1(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_new_aiQuatKeyVector__SWIG_2")]
  public static extern IntPtr new_aiQuatKeyVector__SWIG_2(int jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiQuatKeyVector_getitemcopy")]
  public static extern IntPtr aiQuatKeyVector_getitemcopy(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiQuatKeyVector_getitem")]
  public static extern IntPtr aiQuatKeyVector_getitem(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiQuatKeyVector_setitem")]
  public static extern void aiQuatKeyVector_setitem(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiQuatKeyVector_AddRange")]
  public static extern void aiQuatKeyVector_AddRange(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiQuatKeyVector_GetRange")]
  public static extern IntPtr aiQuatKeyVector_GetRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiQuatKeyVector_Insert")]
  public static extern void aiQuatKeyVector_Insert(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiQuatKeyVector_InsertRange")]
  public static extern void aiQuatKeyVector_InsertRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiQuatKeyVector_RemoveAt")]
  public static extern void aiQuatKeyVector_RemoveAt(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiQuatKeyVector_RemoveRange")]
  public static extern void aiQuatKeyVector_RemoveRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiQuatKeyVector_Repeat")]
  public static extern IntPtr aiQuatKeyVector_Repeat(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiQuatKeyVector_Reverse__SWIG_0")]
  public static extern void aiQuatKeyVector_Reverse__SWIG_0(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiQuatKeyVector_Reverse__SWIG_1")]
  public static extern void aiQuatKeyVector_Reverse__SWIG_1(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiQuatKeyVector_SetRange")]
  public static extern void aiQuatKeyVector_SetRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiQuatKeyVector_Contains")]
  public static extern bool aiQuatKeyVector_Contains(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiQuatKeyVector_IndexOf")]
  public static extern int aiQuatKeyVector_IndexOf(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiQuatKeyVector_LastIndexOf")]
  public static extern int aiQuatKeyVector_LastIndexOf(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiQuatKeyVector_Remove")]
  public static extern bool aiQuatKeyVector_Remove(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_delete_aiQuatKeyVector")]
  public static extern void delete_aiQuatKeyVector(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiTextureVector_Clear")]
  public static extern void aiTextureVector_Clear(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiTextureVector_Add")]
  public static extern void aiTextureVector_Add(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiTextureVector_size")]
  public static extern uint aiTextureVector_size(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiTextureVector_capacity")]
  public static extern uint aiTextureVector_capacity(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiTextureVector_reserve")]
  public static extern void aiTextureVector_reserve(HandleRef jarg1, uint jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_new_aiTextureVector__SWIG_0")]
  public static extern IntPtr new_aiTextureVector__SWIG_0();

  [DllImport("Assimp", EntryPoint="CSharp_new_aiTextureVector__SWIG_1")]
  public static extern IntPtr new_aiTextureVector__SWIG_1(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_new_aiTextureVector__SWIG_2")]
  public static extern IntPtr new_aiTextureVector__SWIG_2(int jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiTextureVector_getitemcopy")]
  public static extern IntPtr aiTextureVector_getitemcopy(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiTextureVector_getitem")]
  public static extern IntPtr aiTextureVector_getitem(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiTextureVector_setitem")]
  public static extern void aiTextureVector_setitem(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiTextureVector_AddRange")]
  public static extern void aiTextureVector_AddRange(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiTextureVector_GetRange")]
  public static extern IntPtr aiTextureVector_GetRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiTextureVector_Insert")]
  public static extern void aiTextureVector_Insert(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiTextureVector_InsertRange")]
  public static extern void aiTextureVector_InsertRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiTextureVector_RemoveAt")]
  public static extern void aiTextureVector_RemoveAt(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiTextureVector_RemoveRange")]
  public static extern void aiTextureVector_RemoveRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiTextureVector_Repeat")]
  public static extern IntPtr aiTextureVector_Repeat(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiTextureVector_Reverse__SWIG_0")]
  public static extern void aiTextureVector_Reverse__SWIG_0(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiTextureVector_Reverse__SWIG_1")]
  public static extern void aiTextureVector_Reverse__SWIG_1(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiTextureVector_SetRange")]
  public static extern void aiTextureVector_SetRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiTextureVector_Contains")]
  public static extern bool aiTextureVector_Contains(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiTextureVector_IndexOf")]
  public static extern int aiTextureVector_IndexOf(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiTextureVector_LastIndexOf")]
  public static extern int aiTextureVector_LastIndexOf(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiTextureVector_Remove")]
  public static extern bool aiTextureVector_Remove(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_delete_aiTextureVector")]
  public static extern void delete_aiTextureVector(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiVector3DVector_Clear")]
  public static extern void aiVector3DVector_Clear(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiVector3DVector_Add")]
  public static extern void aiVector3DVector_Add(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiVector3DVector_size")]
  public static extern uint aiVector3DVector_size(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiVector3DVector_capacity")]
  public static extern uint aiVector3DVector_capacity(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiVector3DVector_reserve")]
  public static extern void aiVector3DVector_reserve(HandleRef jarg1, uint jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_new_aiVector3DVector__SWIG_0")]
  public static extern IntPtr new_aiVector3DVector__SWIG_0();

  [DllImport("Assimp", EntryPoint="CSharp_new_aiVector3DVector__SWIG_1")]
  public static extern IntPtr new_aiVector3DVector__SWIG_1(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_new_aiVector3DVector__SWIG_2")]
  public static extern IntPtr new_aiVector3DVector__SWIG_2(int jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiVector3DVector_getitemcopy")]
  public static extern IntPtr aiVector3DVector_getitemcopy(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiVector3DVector_getitem")]
  public static extern IntPtr aiVector3DVector_getitem(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiVector3DVector_setitem")]
  public static extern void aiVector3DVector_setitem(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiVector3DVector_AddRange")]
  public static extern void aiVector3DVector_AddRange(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiVector3DVector_GetRange")]
  public static extern IntPtr aiVector3DVector_GetRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiVector3DVector_Insert")]
  public static extern void aiVector3DVector_Insert(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiVector3DVector_InsertRange")]
  public static extern void aiVector3DVector_InsertRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiVector3DVector_RemoveAt")]
  public static extern void aiVector3DVector_RemoveAt(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiVector3DVector_RemoveRange")]
  public static extern void aiVector3DVector_RemoveRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiVector3DVector_Repeat")]
  public static extern IntPtr aiVector3DVector_Repeat(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiVector3DVector_Reverse__SWIG_0")]
  public static extern void aiVector3DVector_Reverse__SWIG_0(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiVector3DVector_Reverse__SWIG_1")]
  public static extern void aiVector3DVector_Reverse__SWIG_1(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiVector3DVector_SetRange")]
  public static extern void aiVector3DVector_SetRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiVector3DVector_Contains")]
  public static extern bool aiVector3DVector_Contains(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiVector3DVector_IndexOf")]
  public static extern int aiVector3DVector_IndexOf(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiVector3DVector_LastIndexOf")]
  public static extern int aiVector3DVector_LastIndexOf(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiVector3DVector_Remove")]
  public static extern bool aiVector3DVector_Remove(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_delete_aiVector3DVector")]
  public static extern void delete_aiVector3DVector(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiVector3DVectorVector_Clear")]
  public static extern void aiVector3DVectorVector_Clear(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiVector3DVectorVector_Add")]
  public static extern void aiVector3DVectorVector_Add(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiVector3DVectorVector_size")]
  public static extern uint aiVector3DVectorVector_size(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiVector3DVectorVector_capacity")]
  public static extern uint aiVector3DVectorVector_capacity(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiVector3DVectorVector_reserve")]
  public static extern void aiVector3DVectorVector_reserve(HandleRef jarg1, uint jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_new_aiVector3DVectorVector__SWIG_0")]
  public static extern IntPtr new_aiVector3DVectorVector__SWIG_0();

  [DllImport("Assimp", EntryPoint="CSharp_new_aiVector3DVectorVector__SWIG_1")]
  public static extern IntPtr new_aiVector3DVectorVector__SWIG_1(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_new_aiVector3DVectorVector__SWIG_2")]
  public static extern IntPtr new_aiVector3DVectorVector__SWIG_2(int jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiVector3DVectorVector_getitemcopy")]
  public static extern IntPtr aiVector3DVectorVector_getitemcopy(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiVector3DVectorVector_getitem")]
  public static extern IntPtr aiVector3DVectorVector_getitem(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiVector3DVectorVector_setitem")]
  public static extern void aiVector3DVectorVector_setitem(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiVector3DVectorVector_AddRange")]
  public static extern void aiVector3DVectorVector_AddRange(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiVector3DVectorVector_GetRange")]
  public static extern IntPtr aiVector3DVectorVector_GetRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiVector3DVectorVector_Insert")]
  public static extern void aiVector3DVectorVector_Insert(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiVector3DVectorVector_InsertRange")]
  public static extern void aiVector3DVectorVector_InsertRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiVector3DVectorVector_RemoveAt")]
  public static extern void aiVector3DVectorVector_RemoveAt(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiVector3DVectorVector_RemoveRange")]
  public static extern void aiVector3DVectorVector_RemoveRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiVector3DVectorVector_Repeat")]
  public static extern IntPtr aiVector3DVectorVector_Repeat(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiVector3DVectorVector_Reverse__SWIG_0")]
  public static extern void aiVector3DVectorVector_Reverse__SWIG_0(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiVector3DVectorVector_Reverse__SWIG_1")]
  public static extern void aiVector3DVectorVector_Reverse__SWIG_1(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiVector3DVectorVector_SetRange")]
  public static extern void aiVector3DVectorVector_SetRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_delete_aiVector3DVectorVector")]
  public static extern void delete_aiVector3DVectorVector(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiVectorKeyVector_Clear")]
  public static extern void aiVectorKeyVector_Clear(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiVectorKeyVector_Add")]
  public static extern void aiVectorKeyVector_Add(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiVectorKeyVector_size")]
  public static extern uint aiVectorKeyVector_size(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiVectorKeyVector_capacity")]
  public static extern uint aiVectorKeyVector_capacity(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiVectorKeyVector_reserve")]
  public static extern void aiVectorKeyVector_reserve(HandleRef jarg1, uint jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_new_aiVectorKeyVector__SWIG_0")]
  public static extern IntPtr new_aiVectorKeyVector__SWIG_0();

  [DllImport("Assimp", EntryPoint="CSharp_new_aiVectorKeyVector__SWIG_1")]
  public static extern IntPtr new_aiVectorKeyVector__SWIG_1(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_new_aiVectorKeyVector__SWIG_2")]
  public static extern IntPtr new_aiVectorKeyVector__SWIG_2(int jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiVectorKeyVector_getitemcopy")]
  public static extern IntPtr aiVectorKeyVector_getitemcopy(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiVectorKeyVector_getitem")]
  public static extern IntPtr aiVectorKeyVector_getitem(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiVectorKeyVector_setitem")]
  public static extern void aiVectorKeyVector_setitem(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiVectorKeyVector_AddRange")]
  public static extern void aiVectorKeyVector_AddRange(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiVectorKeyVector_GetRange")]
  public static extern IntPtr aiVectorKeyVector_GetRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiVectorKeyVector_Insert")]
  public static extern void aiVectorKeyVector_Insert(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiVectorKeyVector_InsertRange")]
  public static extern void aiVectorKeyVector_InsertRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiVectorKeyVector_RemoveAt")]
  public static extern void aiVectorKeyVector_RemoveAt(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiVectorKeyVector_RemoveRange")]
  public static extern void aiVectorKeyVector_RemoveRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiVectorKeyVector_Repeat")]
  public static extern IntPtr aiVectorKeyVector_Repeat(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiVectorKeyVector_Reverse__SWIG_0")]
  public static extern void aiVectorKeyVector_Reverse__SWIG_0(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiVectorKeyVector_Reverse__SWIG_1")]
  public static extern void aiVectorKeyVector_Reverse__SWIG_1(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiVectorKeyVector_SetRange")]
  public static extern void aiVectorKeyVector_SetRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiVectorKeyVector_Contains")]
  public static extern bool aiVectorKeyVector_Contains(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiVectorKeyVector_IndexOf")]
  public static extern int aiVectorKeyVector_IndexOf(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiVectorKeyVector_LastIndexOf")]
  public static extern int aiVectorKeyVector_LastIndexOf(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiVectorKeyVector_Remove")]
  public static extern bool aiVectorKeyVector_Remove(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_delete_aiVectorKeyVector")]
  public static extern void delete_aiVectorKeyVector(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiVertexWeightVector_Clear")]
  public static extern void aiVertexWeightVector_Clear(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiVertexWeightVector_Add")]
  public static extern void aiVertexWeightVector_Add(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiVertexWeightVector_size")]
  public static extern uint aiVertexWeightVector_size(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiVertexWeightVector_capacity")]
  public static extern uint aiVertexWeightVector_capacity(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiVertexWeightVector_reserve")]
  public static extern void aiVertexWeightVector_reserve(HandleRef jarg1, uint jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_new_aiVertexWeightVector__SWIG_0")]
  public static extern IntPtr new_aiVertexWeightVector__SWIG_0();

  [DllImport("Assimp", EntryPoint="CSharp_new_aiVertexWeightVector__SWIG_1")]
  public static extern IntPtr new_aiVertexWeightVector__SWIG_1(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_new_aiVertexWeightVector__SWIG_2")]
  public static extern IntPtr new_aiVertexWeightVector__SWIG_2(int jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiVertexWeightVector_getitemcopy")]
  public static extern IntPtr aiVertexWeightVector_getitemcopy(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiVertexWeightVector_getitem")]
  public static extern IntPtr aiVertexWeightVector_getitem(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiVertexWeightVector_setitem")]
  public static extern void aiVertexWeightVector_setitem(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiVertexWeightVector_AddRange")]
  public static extern void aiVertexWeightVector_AddRange(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiVertexWeightVector_GetRange")]
  public static extern IntPtr aiVertexWeightVector_GetRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiVertexWeightVector_Insert")]
  public static extern void aiVertexWeightVector_Insert(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiVertexWeightVector_InsertRange")]
  public static extern void aiVertexWeightVector_InsertRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiVertexWeightVector_RemoveAt")]
  public static extern void aiVertexWeightVector_RemoveAt(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiVertexWeightVector_RemoveRange")]
  public static extern void aiVertexWeightVector_RemoveRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiVertexWeightVector_Repeat")]
  public static extern IntPtr aiVertexWeightVector_Repeat(HandleRef jarg1, int jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiVertexWeightVector_Reverse__SWIG_0")]
  public static extern void aiVertexWeightVector_Reverse__SWIG_0(HandleRef jarg1);

  [DllImport("Assimp", EntryPoint="CSharp_aiVertexWeightVector_Reverse__SWIG_1")]
  public static extern void aiVertexWeightVector_Reverse__SWIG_1(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiVertexWeightVector_SetRange")]
  public static extern void aiVertexWeightVector_SetRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("Assimp", EntryPoint="CSharp_aiVertexWeightVector_Contains")]
  public static extern bool aiVertexWeightVector_Contains(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiVertexWeightVector_IndexOf")]
  public static extern int aiVertexWeightVector_IndexOf(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiVertexWeightVector_LastIndexOf")]
  public static extern int aiVertexWeightVector_LastIndexOf(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_aiVertexWeightVector_Remove")]
  public static extern bool aiVertexWeightVector_Remove(HandleRef jarg1, HandleRef jarg2);

  [DllImport("Assimp", EntryPoint="CSharp_delete_aiVertexWeightVector")]
  public static extern void delete_aiVertexWeightVector(HandleRef jarg1);
}

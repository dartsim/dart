dofs{
    root<t-X> { 0.0000, -10.0000, 10.0000 }
    root<t-Y> { 0.0000, -10.0000, 10.0000 }
    root<t-Z> { 0.0000, -10.0000, 10.0000 }
	root<a-X> { 0.0000, -3.1416, 3.1416 }
    root<a-Y> { 0.0000, -6.1416, 6.1416 }
    root<a-Z> { 0.0000, -3.1416, 3.1416 }
    Length { 0.05, 0.0000, 10.0000 }
    neck<a-X> { 0.0000, -3.1416, 3.1416 }
    neck<a-Y> { 0.0000, -3.1416, 3.1416 }
    neck<a-Z> { 0.0000, -3.1416, 3.1416 }
    torso<a-X> { 0.0000, -3.1416, 3.1416 }
    torso<a-Y> { 0.0000, -3.1416, 3.1416 }
    torso<a-Z> { 0.0000, -3.1416, 3.1416 }
    arm1<a-X> { 0.0000, -3.1416, 3.1416 }
    arm1<a-Y> { 0.0000, -3.1416, 3.1416 }
    arm1<a-Z> { 0.0000, -3.1416, 3.1416 }
    forearm1<a-X> { 0.0000, -3.1416, 3.1416 }
    forearm1<a-Y> { 0.0000, -3.1416, 3.1416 }
    forearm1<a-Z> { 0.0000, -3.1416, 3.1416 }
    arm2<a-X> { 0.0000, -3.1416, 3.1416 }
    arm2<a-Y> { 0.0000, -3.1416, 3.1416 }
    arm2<a-Z> { 0.0000, -3.1416, 3.1416 }
    forearm2<a-X> { 0.0000, -3.1416, 3.1416 }
    forearm2<a-Y> { 0.0000, -3.1416, 3.1416 }
    forearm2<a-Z> { 0.0000, -3.1416, 3.1416 }
    leg1<a-X> { 0.0000, -3.1416, 3.1416 }
    leg1<a-Y> { 0.0000, -3.1416, 3.1416 }
    leg1<a-Z> { 0.0000, -3.1416, 3.1416 }
    shin1<a-X> { 0.0000, -3.1416, 3.1416 }
    shin1<a-Y> { 0.0000, -3.1416, 3.1416 }
    shin1<a-Z> { 0.0000, -3.1416, 3.1416 }
    leg2<a-X> { 0.0000, -3.1416, 3.1416 }
    leg2<a-Y> { 0.0000, -3.1416, 3.1416 }
    leg2<a-Z> { 0.0000, -3.1416, 3.1416 }
    shin2<a-X> { 0.0000, -3.1416, 3.1416 }
    shin2<a-Y> { 0.0000, -3.1416, 3.1416 }
    shin2<a-Z> { 0.0000, -3.1416, 3.1416 }


}

mass {
    node_mass { 0.1 }
}

node root { 0
    chain { 2
		translate { <root<t-X>,root<t-Y>,root<t-Z>> }
        rotate_expmap { <root<a-X>,root<a-Y>,root<a-Z>> }
    }
    primitive {<1.0,1.0,1.0>, <0.0,-0.5,0.0>, Length, CUBE, node_mass}

	node neck { 1
		chain{ 2
			telescope { <0.0,-1.0,0.0>, Length }
			rotate_expmap { <neck<a-X>, neck<a-Y>, neck<a-Z>> }
		}
		primitive {<.2,1.0,0.2>, <0.0,-0.5,0.0>, Length, CUBE, node_mass}
    
		node torso { 1
			chain { 2
				telescope { <0.0,-1.0,0.0>, Length }
				rotate_expmap { <torso<a-X>, torso<a-Y>, torso<a-Z>> }
			}
			primitive {<0.7,4.0,0.7>, <0.0,-2.0,0.0>, Length, CUBE, node_mass}
		
			node leg1 { 6
				chain { 2
					telescope { <0.0,-4.0,0.0>, Length }
					rotate_expmap { <leg1<a-X>, leg1<a-Y>, leg1<a-Z>> }
				}
				primitive {<0.3,2.0,0.3>, <0.0,-1.0,0.0>, Length, CUBE, node_mass}
							
				node shin1 { 7
					chain { 2
						telescope { <0.0,-2.0,0.0>, Length }
						rotate_expmap { <shin1<a-X>, shin1<a-Y>, shin1<a-Z>> }
					}
				primitive {<0.2,2.0,0.2>, <0.0,-1.0,0.0>, Length, CUBE, node_mass}
				}
			}
			node leg2 { 6
				chain { 2
					telescope { <0.0,-4.0,0.0>, Length }
					rotate_expmap { <leg2<a-X>, leg2<a-Y>, leg2<a-Z>> }
				}
				primitive {<0.3,2.0,0.3>, <0.0,-1.0,0.0>, Length, CUBE, node_mass}
							
				node shin2 { 7
					chain { 2
						telescope { <0.0,-2.0,0.0>, Length }
						rotate_expmap { <shin2<a-X>, shin2<a-Y>, shin2<a-Z>> }
					}
				primitive {<0.2,2.0,0.2>, <0.0,-1.0,0.0>, Length, CUBE, node_mass}
				}
			}
		}
		node arm1 { 2
			chain { 3	
				telescope { <0.0,-1.0,0.0>, Length }
				rotate_expmap { <arm1<a-X>, arm1<a-Y>, arm1<a-Z>> }
			}
			primitive {<0.3,2.0,0.3>, <0.0,-1.0,0.0>, Length, CUBE, node_mass}

			node forearm1 { 3
				chain { 2
					telescope { <0.0,-2.0,0.0>, Length }
					rotate_expmap { <forearm1<a-X>, forearm1<a-Y>, forearm1<a-Z>> }
				}
				primitive {<0.2,2.0,0.2>, <0.0,-1.0,0.0>, Length, CUBE, node_mass}		
			}
		}
		node arm2 { 4
			chain { 2
				telescope { <0.0,-1.0,0.0>, Length }
				rotate_expmap { <arm2<a-X>, arm2<a-Y>, arm2<a-Z>> }
			}
			primitive {<0.3,2.0,0.3>, <0.0,-1.0,0.0>, Length, CUBE, node_mass}

			node forearm2 { 5
				chain { 2
					telescope { <0.0,-2.0,0.0>, Length }
					rotate_expmap { <forearm2<a-X>, forearm2<a-Y>, forearm2<a-Z>> }
				}
				primitive {<0.2,2.0,0.2>, <0.0,-1.0,0.0>, Length, CUBE, node_mass}
			}
		}
    }        

    
}

handles {
	tip { <0.0,0.0,0.0>, 0, root }
}


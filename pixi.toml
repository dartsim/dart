[project]
name = "DART"
version = "6.15.0"
description = "Dynamic Animation and Robotics Toolkit"
authors = ["Jeongseok Lee <jslee02@gmail.com>"]
channels = ["conda-forge"]
platforms = ["linux-64", "osx-64", "osx-arm64", "win-64"]

[build-dependencies]
black = ">=24.2.0"
cmake = ">=3.22"
doxygen = ">=1.10.0"
isort = ">=5.13.2"
ninja = ">=1.11.1"
pip = ">=24.0"
pipx = ">=1.4.3"
pkg-config = ">=0.29.2"
pytest = ">=8.1.1"
setuptools = ">=69.1.1"

[dependencies]
assimp = ">=5.3.1"
libboost = ">=1.86.0"
bullet-cpp = ">=3.25"
console_bridge = ">=1.0.2"
eigen = ">=3.4.0"
fcl = ">=0.7.0"
fmt = ">=10.2.1"
imgui = ">=1.90.8"
ipopt = ">=3.14.14"
libode = ">=0.16.2"
nlopt = ">=2.7.1"
numpy = ">=1.26.4"
octomap = ">=1.9.8"
openscenegraph = ">=3.6.5"
pagmo = ">=2.19.1"
spdlog = ">=1.12.0"
tinyxml2 = ">=10.0.0"
urdfdom = ">=4.0.0"

[tasks]
clean = { cmd = "rm -rf build && rm -rf .deps && rm -rf .pixi && rm pixi.lock" }

config-local = { cmd = "cmake -G Ninja -S . -B build -DDART_VERBOSE=ON -DCMAKE_INSTALL_PREFIX=$CONDA_PREFIX" }
install-local = { cmd = "cmake --install build --prefix $CONDA_PREFIX", depends_on = [
    "config_local",
    "build",
] }

config = { cmd = """
    cmake \
        -G Ninja \
        -S . \
        -B build \
        -DCMAKE_BUILD_TYPE=Release \
        -DCMAKE_INSTALL_PREFIX=$CONDA_PREFIX \
        -DCMAKE_PREFIX_PATH=$CONDA_PREFIX \
        -DDART_VERBOSE=ON \
        -DDART_USE_SYSTEM_IMGUI=ON
""" }

lint-cpp = { cmd = "cmake --build build --target format", depends_on = [
    "config",
] }
lint-py = { cmd = "black . --exclude '\\..*' && isort . --skip-glob '.*'", depends_on = [
    "config",
] }
lint = { depends_on = ["lint-cpp", "lint-py"] }
check-lint-cpp = { cmd = "cmake --build build --target check-format", depends_on = [
    "config",
] }
check-lint-py = { cmd = "black . --check --exclude '\\..*' && isort . --check --skip-glob '.*'", depends_on = [
    "config",
] }
check-lint = { depends_on = ["check-lint-cpp", "check-lint-py"] }

build = { cmd = "cmake --build build -j --target all", depends_on = ["config"] }
build-tests = { cmd = "cmake --build build -j --target tests", depends_on = [
    "config",
] }
build-dartpy = { cmd = "cmake --build build -j --target dartpy", depends_on = [
    "config",
] }

test = { cmd = "ctest --test-dir build --output-on-failure", depends_on = [
    "build-tests",
] }
test-dartpy = { cmd = "cmake --build build -j --target pytest", depends_on = [
    "config",
] }
test-all = { cmd = "cmake --build build -j --target ALL", depends_on = [
    "config",
] }

ex-atlas-puppet = { cmd = "cmake --build build --target atlas_puppet --parallel && ./build/bin/atlas_puppet", depends_on = [
    "config",
] }
ex-atlas-simbicon = { cmd = "cmake --build build --target atlas_simbicon --parallel && ./build/bin/atlas_simbicon", depends_on = [
    "config",
] }
ex-hello-world = { cmd = "cmake --build build --target hello_world --parallel && ./build/bin/hello_world", depends_on = [
    "config",
] }

bm-boxes = { cmd = "cmake --build build --target BM_INTEGRATION_boxes --parallel && ./build/bin/BM_INTEGRATION_boxes", depends_on = [
    "config",
] }
bm-empty = { cmd = "cmake --build build --target BM_INTEGRATION_empty --parallel && ./build/bin/BM_INTEGRATION_empty", depends_on = [
    "config",
] }
bm-kinematics = { cmd = "cmake --build build --target BM_INTEGRATION_kinematics --parallel && ./build/bin/BM_INTEGRATION_kinematics", depends_on = [
    "config",
] }

tu-biped = { cmd = "cmake --build build --target tutorial_biped --parallel && ./build/bin/tutorial_biped", depends_on = [
    "config",
] }
tu-biped-fi = { cmd = "cmake --build build --target tutorial_biped_finished --parallel && ./build/bin/tutorial_biped_finished", depends_on = [
    "config",
] }
tu-collisions = { cmd = "cmake --build build --target tutorial_collisions --parallel && ./build/bin/tutorial_collisions", depends_on = [
    "config",
] }
tu-collisions-fi = { cmd = "cmake --build build --target tutorial_collisions_finished --parallel && ./build/bin/tutorial_collisions_finished", depends_on = [
    "config",
] }
tu-dominoes = { cmd = "cmake --build build --target tutorial_dominoes --parallel && ./build/bin/tutorial_dominoes", depends_on = [
    "config",
] }
tu-dominoes-fi = { cmd = "cmake --build build --target tutorial_dominoes_finished --parallel && ./build/bin/tutorial_dominoes_finished", depends_on = [
    "config",
] }
tu-multi-pendulum = { cmd = "cmake --build build --target tutorial_multi_pendulum --parallel && ./build/bin/tutorial_multi_pendulum", depends_on = [
    "config",
] }
tu-multi-pendulum-fi = { cmd = "cmake --build build --target tutorial_multi_pendulum_finished --parallel && ./build/bin/tutorial_multi_pendulum_finished", depends_on = [
    "config",
] }

install = { cmd = "cmake --build build --target install --parallel", depends_on = [
    "build",
] }

create-deps-dir = { cmd = "mkdir -p .deps" }
remove-deps-dir = { cmd = "rm -rf .deps" }

################################################################################
# linux-64
################################################################################

[target.linux-64.build-dependencies]
clang-format-14 = ">=14.0.6,<15"

[target.linux-64.dependencies]
freeglut = ">=3.2.2,<3.3"

[target.linux-64.tasks]
tracy = { cmd = "docker run --rm -d -e DISPLAY=$DISPLAY -v /tmp/.X11-unix:/tmp/.X11-unix:rw --net=host tracy-profiler" }

################################################################################
# osx-64
################################################################################

[target.osx-64.build-dependencies]
clang-format-14 = ">=14.0.6,<15"

[target.osx-64.dependencies]

[target.osx-64.tasks]

################################################################################
# osx-arm64
################################################################################

[target.osx-arm64.build-dependencies]
clang-format-14 = ">=14.0.6,<15"

[target.osx-arm64.dependencies]

[target.osx-arm64.tasks]

################################################################################
# win-64
################################################################################

[target.win-64.dependencies]
freeglut = ">=3.2.2"

[target.win-64.tasks]
config = { cmd = """
    cmake \
        -S . \
        -B build \
        -G 'Visual Studio 17 2022' \
        -DCMAKE_INSTALL_PREFIX=$CONDA_PREFIX \
        -DCMAKE_PREFIX_PATH=$CONDA_PREFIX \
        -DDART_VERBOSE=ON \
        -DDART_MSVC_DEFAULT_OPTIONS=ON \
        -DBUILD_SHARED_LIBS=OFF \
        -DDART_USE_SYSTEM_IMGUI=ON
""" }
lint-py = { cmd = "black . --exclude '\\..*' && isort . --skip-glob '.*'", depends_on = [
    "config",
] }
lint = { depends_on = ["lint-py"] }
check-lint-py = { cmd = "black . --check --exclude '\\..*' && isort . --check --skip-glob '.*'", depends_on = [
    "config",
] }
check-lint = { depends_on = ["check-lint-py"] }

build = { cmd = "cmake --build build --config Release -j", depends_on = [
    "config",
] }
build-tests = { cmd = "cmake --build build --config Release -j --target tests", depends_on = [
    "config",
] }
build-dartpy = { cmd = "cmake --build build -j --target dartpy", depends_on = [
    "config",
] }

test = { cmd = "ctest --test-dir build --build-config Release --output-on-failure", depends_on = [
    "build-tests",
] }
test-dartpy = { cmd = "cmake --build build --config Release -j --target pytest", depends_on = [
    "config",
] }
test-all = { cmd = "cmake --build build --config Release -j --target ALL", depends_on = [
    "config",
] }

tu-biped = { cmd = "cmake --build build --config Release --target tutorial_biped --parallel && build/Release/tutorial_biped.exe", depends_on = [
    "config",
] }
tu-biped-fi = { cmd = "cmake --build build --config Release --target tutorial_biped_finished --parallel && build/Release/tutorial_biped_finished.exe", depends_on = [
    "config",
] }
tu-collisions = { cmd = "cmake --build build --config Release --target tutorial_collisions --parallel && build/Release/tutorial_collisions.exe", depends_on = [
    "config",
] }
tu-collisions-fi = { cmd = "cmake --build build --config Release --target tutorial_collisions_finished --parallel && build/Release/tutorial_collisions_finished.exe", depends_on = [
    "config",
] }
tu-dominoes = { cmd = "cmake --build build --config Release --target tutorial_dominoes --parallel && build/Release/tutorial_dominoes.exe", depends_on = [
    "config",
] }
tu-dominoes-fi = { cmd = "cmake --build build --config Release --target tutorial_dominoes_finished --parallel && build/Release/tutorial_dominoes_finished.exe", depends_on = [
    "config",
] }
tu-multi-pendulum = { cmd = "cmake --build build --config Release --target tutorial_multi_pendulum --parallel && build/Release/tutorial_multi_pendulum.exe", depends_on = [
    "config",
] }
tu-multi-pendulum-fi = { cmd = "cmake --build build --config Release --target tutorial_multi_pendulum_finished --parallel && build/Release/tutorial_multi_pendulum_finished.exe", depends_on = [
    "config",
] }

install = { cmd = "cmake --build build --config Release -j --target install", depends_on = [
    "build",
] }

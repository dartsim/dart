# Specify version format
version: "{build}"

image:
  - Visual Studio 2017
  - Ubuntu

platform: x64

# specify custom environment variables
environment:
  MSVC_DEFAULT_OPTIONS: ON
  CMAKE_TOOLCHAIN_FILE: -DCMAKE_TOOLCHAIN_FILE="C:\tools\vcpkg\scripts\buildsystems\vcpkg.cmake"
  matrix:
    - CMAKE_GENERATOR: -G"Visual Studio 15 2017 Win64"
      CMAKE_TOOLCHAIN: -T"v141"

# build configuration, i.e. Debug, Release, etc.
configuration:
  - Debug
  - Release

# scripts that are called at very beginning, before repo cloning
init:
  - cmd: cmake --version
  - cmd: msbuild /version

# branches to build
branches:
  # blacklist
  except:
    - gh-pages

# scripts that run after cloning repository
install:
  #------------------
  # Windows 10
  #------------------
  # update vcpkg
  - cmd: cd C:\tools\vcpkg
  - cmd: git pull
  - cmd: .\bootstrap-vcpkg.bat
  
  - cmd: if "%platform%"=="Win32" set VCPKG_ARCH=x86-windows
  - cmd: if "%platform%"=="x64"   set VCPKG_ARCH=x64-windows

  # remove outdated versions
  - cmd: vcpkg remove --outdated --recurse

  # install required dependencies
  - cmd: vcpkg install --recurse --triplet %VCPKG_ARCH% assimp boost-system boost-filesystem ccd eigen3 fcl
  
  # install optional dependencies
  #- vcpkg install --recurse --triplet %VCPKG_ARCH% bullet3 flann freeglut nlopt ode opengl osg tinyxml2 urdfdom
  #- vcpkg install ipopt:%VCPKG_ARCH%
  
  - cmd: vcpkg integrate install
  - cmd: cd "%APPVEYOR_BUILD_FOLDER%"

  #------------------
  # Ubuntu 16.04 LTS 
  #------------------
  - sh: sudo apt-get update
  - sh: sudo apt-get --yes install build-essential cmake pkg-config git
  - sh: sudo apt-get --yes install libeigen3-dev libassimp-dev libccd-dev libfcl-dev libboost-regex-dev libboost-system-dev
  - sh: sudo apt-get --yes install libnlopt-dev coinor-libipopt-dev libbullet-dev libflann-dev libtinyxml2-dev liburdfdom-dev libxi-dev libxmu-dev freeglut3-dev libopenscenegraph-dev
  - sh: sudo apt-get --yes install clang-format-3.8

# preserve contents of selected directories and files across project builds
cache:
  - C:\tools\vcpkg\installed -> .appveyor.yml

build_script:
  #------------------
  # Windows 10
  #------------------
  - cmd: mkdir build && cd build
  - cmd: cmake %CMAKE_GENERATOR% -DCMAKE_BUILD_TYPE=%configuration% -DDART_MSVC_DEFAULT_OPTIONS="%MSVC_DEFAULT_OPTIONS%" %CMAKE_TOOLCHAIN_FILE% %CMAKE_TOOLCHAIN% ..
  - cmd: cmake --build . --target ALL_BUILD --config %configuration% -- /maxcpucount:4 /verbosity:quiet
  
  #------------------
  # Ubuntu 16.04 LTS
  #------------------
  - sh: mkdir build && cd build
  - sh: cmake -DCMAKE_BUILD_TYPE=$configuration -DDART_TREAT_WARNINGS_AS_ERRORS=ON ..
  - sh: make -j4 tests examples tutorials
  - sh: make check-format

test_script:
  #- cmd: ctest --build-config %configuration% --parallel 4 --output-on-failure
  - sh: ctest -j4

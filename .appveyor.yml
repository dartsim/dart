# Specify version format
version: "{build}"

image:
  - Visual Studio 2019
  # - Ubuntu1604
  # - Ubuntu1804

platform: x64

# specify custom environment variables
environment:
  VCPKG_BUILD_TAG: v0.2.0-70f192e
  MSVC_DEFAULT_OPTIONS: ON
  CMAKE_TOOLCHAIN_FILE: -DCMAKE_TOOLCHAIN_FILE="C:\dartsim\vcpkg\scripts\buildsystems\vcpkg.cmake"
  matrix:
    - CMAKE_GENERATOR: -G"Visual Studio 16 2019"
      CMAKE_TOOLCHAIN: -T"v142"

# build configuration, i.e. Debug, Release, etc.
configuration:
  - Debug
  # - Release

# scripts that are called at very beginning, before repo cloning
init:
  - cmd: cmake --version
  - cmd: msbuild /version

# branches to build
branches:
  # blacklist
  except:
    - gh-pages

# scripts that run after cloning repository
install:
  #------------------
  # Windows 10
  #------------------
  - cmd: if "%platform%"=="Win32" set VCPKG_ARCH=x86-windows
  - cmd: if "%platform%"=="x64"   set VCPKG_ARCH=x64-windows
  - cmd: mkdir -p C:\dartsim
  - cmd: choco install -y wget
  - cmd: wget -q https://github.com/dartsim/vcpkg-build/releases/download/%VCPKG_BUILD_TAG%/vcpkg-dartsim-dependencies.zip
  - cmd: unzip -qq vcpkg-dartsim-dependencies.zip -d C:\dartsim
  - cmd: cd "%APPVEYOR_BUILD_FOLDER%"

  #-------------------------------
  # Ubuntu 16.04 LTS && 18.04 LTS
  #-------------------------------
  - sh: sudo apt-get update
  - sh: sudo apt-get --yes install build-essential cmake pkg-config git
  - sh: sudo apt-get --yes install libeigen3-dev libassimp-dev libccd-dev libfcl-dev libboost-system-dev
  - sh: sudo apt-get --yes install libnlopt-dev coinor-libipopt-dev libbullet-dev libflann-dev libtinyxml2-dev liburdfdom-dev libxi-dev libxmu-dev freeglut3-dev libopenscenegraph-dev
  - sh: sudo apt-get --yes install clang-format-6.0

build_script:
  #------------------
  # Windows 10
  #------------------
  - cmd: mkdir build && cd build
  - cmd: cmake %CMAKE_GENERATOR% -A x64 -DCMAKE_BUILD_TYPE=%configuration% -DDART_VERBOSE=ON -DDART_MSVC_DEFAULT_OPTIONS="%MSVC_DEFAULT_OPTIONS%" %CMAKE_TOOLCHAIN_FILE% %CMAKE_TOOLCHAIN% ..
  - cmd: cmake --build . --target ALL_BUILD --config %configuration% --parallel

  #-------------------------------
  # Ubuntu 16.04 LTS && 18.04 LTS
  #-------------------------------
  - sh: mkdir build && cd build
  - sh: cmake -DCMAKE_BUILD_TYPE=$configuration -DDART_TREAT_WARNINGS_AS_ERRORS=ON ..
  - sh: make -j4 tests examples tutorials
  - sh: make check-format

test_script:
  #------------------
  # Windows 10
  #------------------
  - cmd: ctest --output-on-fauilure

  #-------------------------------
  # Ubuntu 16.04 LTS && 18.04 LTS
  #-------------------------------
  - sh: ctest -j4

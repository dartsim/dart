ARG BASE_IMAGE=quay.io/pypa/manylinux_2_28_aarch64
FROM $BASE_IMAGE

ARG NUM_CORES=14

# Missing optional dependencies:
#   ipopt
#   nlopt
#   spdlog

RUN yum install -y \
    boost-devel \
    glew-devel \
    python3-devel

# fmt
RUN git clone https://github.com/fmtlib/fmt.git -b 10.2.1 \
    && mkdir -p fmt/build \
    && cmake fmt -B fmt/build -DCMAKE_BUILD_TYPE=Release -DFMT_TEST=OFF \
    && cmake --build fmt/build --target install -j${NUM_CORES} \
    && rm -rf fmt

# assimp
RUN git clone https://github.com/assimp/assimp.git -b 'v5.2.5' \
    && mkdir -p assimp/build \
    && cmake assimp -B assimp/build -DCMAKE_BUILD_TYPE=Release -DASSIMP_BUILD_TESTS=OFF -DASSIMP_WARNINGS_AS_ERRORS=OFF \
    && cmake --build assimp/build --target install -j${NUM_CORES} \
    && rm -rf assimp

# eigen
RUN git clone https://gitlab.com/libeigen/eigen.git -b '3.4.0' \
    && mkdir -p eigen/build \
    && cmake eigen -B eigen/build -DCMAKE_BUILD_TYPE=Release -DEIGEN_BUILD_TESTING=OFF -DEIGEN_BUILD_DOC=OFF \
    && cmake --build eigen/build --target install -j${NUM_CORES} \
    && rm -rf eigen

# octomap
RUN git clone https://github.com/OctoMap/octomap.git -b 'v1.9.6' \
    && mkdir -p octomap/build \
    && cmake octomap -B octomap/build -DCMAKE_BUILD_TYPE=Release -DBUILD_OCTOVIS_SUBPROJECT=OFF -DBUILD_OCTOVIS_SUBPROJECT=OFF -DBUILD_DYNAMICETD3D_SUBPROJECT=OFF -DBUILD_TESTING=OFF \
    && cmake --build octomap/build --target install -j${NUM_CORES} \
    && rm -rf octomap

# libccd
RUN git clone https://github.com/danfis/libccd.git -b 'v2.1' \
    && mkdir -p libccd/build \
    && cmake libccd -B libccd/build -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTING=OFF \
    && cmake --build libccd/build --target install -j${NUM_CORES} \
    && rm -rf libccd

# fcl
RUN git clone https://github.com/flexible-collision-library/fcl.git -b '0.7.0' \
    && mkdir -p fcl/build \
    && cmake fcl -B fcl/build -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTING=OFF \
    && cmake --build fcl/build --target install -j${NUM_CORES} \
    && rm -rf fcl

# Bullet
RUN git clone https://github.com/bulletphysics/bullet3.git -b 3.25 \
    && mkdir -p bullet3/build \
    && cmake bullet3 -B bullet3/build -DCMAKE_BUILD_TYPE=Release -DBUILD_UNIT_TESTS=OFF -DBUILD_CPU_DEMOS=OFF -DBUILD_BULLET2_DEMOS=OFF \
    && cmake --build bullet3/build --target install -j${NUM_CORES} \
    && rm -rf bullet3

# tinyxml
# RUN wget https://sourceforge.net/projects/tinyxml/files/tinyxml/2.6.2/tinyxml_2_6_2.tar.gz \
#     && tar -xzf tinyxml_2_6_2.tar.gz \
#     && cd tinyxml \
#     && make \
#     && make install \
#     && cd .. \
#     && rm -rf tinyxml
RUN git clone https://github.com/jslee02/tinyxml.git \
    && mkdir -p tinyxml/build \
    && cmake tinyxml -B tinyxml/build -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTING=OFF \
    && cmake --build tinyxml/build --target install -j${NUM_CORES} \
    && rm -rf tinyxml

# tinyxml2
RUN git clone https://github.com/leethomason/tinyxml2.git -b '9.0.0' \
    && mkdir -p tinyxml2/build \
    && cmake tinyxml2 -B tinyxml2/build -DCMAKE_BUILD_TYPE=Release -Dtinyxml2_BUILD_TESTING=OFF -DCMAKE_POSITION_INDEPENDENT_CODE=ON \
    && cmake --build tinyxml2/build --target install -j${NUM_CORES} \
    && rm -rf tinyxml2

# console_bridge
RUN git clone https://github.com/ros/console_bridge.git -b 1.0.2 \
    && mkdir -p console_bridge/build \
    && cmake console_bridge -B console_bridge/build -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTING=OFF \
    && cmake --build console_bridge/build --target install -j${NUM_CORES} \
    && rm -rf console_bridge

# urdfdom_headers
RUN git clone https://github.com/ros/urdfdom_headers.git -b 1.0.5 \
    && mkdir -p urdfdom_headers/build \
    && cmake urdfdom_headers -B urdfdom_headers/build -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTING=OFF \
    && cmake --build urdfdom_headers/build --target install -j${NUM_CORES} \
    && rm -rf urdfdom_headers

# urdfdom
RUN git clone https://github.com/ros/urdfdom.git -b 3.0.0 \
    && mkdir -p urdfdom/build \
    && cmake urdfdom -B urdfdom/build -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTING=OFF \
    && cmake --build urdfdom/build --target install -j${NUM_CORES} \
    && rm -rf urdfdom

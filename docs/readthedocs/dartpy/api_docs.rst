API Documentation
=================

Overview
--------

DART documentation is split across **two sites** with clear separation of concerns:

1. **Read the Docs (RTD)** - User guides, tutorials, and developer documentation
2. **GitHub Pages** - Version-specific API reference (C++ and Python)

Architecture Diagram
--------------------

.. code-block:: text

   ┌─────────────────────────────────────────────────────────────────┐
   │                    DART Documentation System                     │
   └─────────────────────────────────────────────────────────────────┘

   ┌──────────────────────────────┐        ┌─────────────────────────────┐
   │   Read the Docs (RTD)        │        │    GitHub Pages             │
   │   docs.dartsim.org           │        │    dartsim.github.io/dart/  │
   ├──────────────────────────────┤        ├─────────────────────────────┤
   │ Source: /docs/readthedocs/   │        │ Built by: build_docs.py     │
   │                              │        │                             │
   │ Contains:                    │        │ Contains (per version):     │
   │ • User Guides                │        │ • C++ API (Doxygen)         │
   │ • Tutorials                  │        │   {version}/                │
   │ • Developer Docs             │        │ • Python API (Sphinx)       │
   │ • Links to API docs →        │        │   {version}-py/             │
   │                              │        │                             │
   │                              │        │ Examples:                   │
   │ Build: Sphinx                │        │ • v6.13.2/     (C++)        │
   │ Trigger: Push to main        │        │ • v6.13.2-py/  (Python)     │
   └──────────────────────────────┘        └─────────────────────────────┘
            │                                       │
            │                                       │
            ▼                                       ▼
   ┌──────────────────────────────┐        ┌─────────────────────────────┐
   │ Local Build (pixi)           │        │ GitHub Actions              │
   │                              │        │                             │
   │ Commands:                    │        │ Workflow: api_doc.yml       │
   │ • pixi run docs-build        │        │ Trigger: Push to main       │
   │ • pixi run docs-serve        │        │ Runs: build_docs.py         │
   │                              │        │ Deploys: To gh-pages branch │
   │ Result: Same as RTD          │        │                             │
   │ Output: _build/html          │        │ Builds ALL versions         │
   └──────────────────────────────┘        └─────────────────────────────┘

Documentation Sites
-------------------

Read the Docs
~~~~~~~~~~~~~

**URL:** https://docs.dartsim.org

**Contains:**

- ✅ User guides and tutorials
- ✅ Developer guides and contribution docs
- ✅ Links to API documentation on GitHub Pages
- ❌ API Reference (hosted on GitHub Pages instead)

**Source:** ``/docs/readthedocs/``

**Why no API docs on RTD?**

Read the Docs cannot compile DART or dartpy, which are required to generate API documentation.
All API reference documentation is hosted on GitHub Pages for consistency.

GitHub Pages
~~~~~~~~~~~~

**URL:** https://dartsim.github.io/dart/

**Contains (per version):**

- ✅ C++ API Documentation (Doxygen): ``{version}/``
- ✅ Python API Documentation (Sphinx): ``{version}-py/``

**Examples:**

- C++ v6.13.2: https://dartsim.github.io/dart/v6.13.2/
- Python v6.13.2: https://dartsim.github.io/dart/v6.13.2-py/

**Why GitHub Pages?**

1. **Compilation Required**: Both C++ and Python API docs require compiling DART
2. **Version Management**: Provides versioned docs for each release
3. **Build Resources**: GitHub Actions has resources for full builds
4. **Consistency**: Single source of truth for API reference

Architecture
------------

C++ API Documentation
~~~~~~~~~~~~~~~~~~~~~~

**Location:** GitHub Pages only

- Source: Generated by Doxygen from C++ source code
- Build: ``make docs`` in CMake build directory
- URL: https://dartsim.github.io/dart/{version}/

**Local Build:**

.. code-block:: bash

   pixi run api-docs-cpp          # Build C++ API
   pixi run api-docs-serve-cpp    # Serve at http://localhost:8002

Python API Documentation
~~~~~~~~~~~~~~~~~~~~~~~~

**Location:** GitHub Pages only

- Source: ``/docs/python_api/``
- Build: Sphinx autodoc with compiled dartpy module
- URL: https://dartsim.github.io/dart/{version}-py/

**Local Build:**

.. code-block:: bash

   pixi run api-docs-py           # Build Python API
   pixi run api-docs-serve-py     # Serve at http://localhost:8003

Building Locally
----------------

Main Documentation (Read the Docs)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Build the same documentation as published on Read the Docs:

.. code-block:: bash

   pixi run docs-build        # Build documentation
   pixi run docs-serve        # Serve at http://localhost:8000

This includes user guides, tutorials, and developer documentation.

API Documentation (GitHub Pages)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

**C++ API (Doxygen)**

.. code-block:: bash

   pixi run api-docs-cpp
   pixi run api-docs-serve-cpp  # http://localhost:8002

**Python API (Sphinx)**

.. code-block:: bash

   pixi run api-docs-py
   pixi run api-docs-serve-py  # http://localhost:8003

**Both C++ and Python**

.. code-block:: bash

   pixi run api-docs-build  # Build both

Testing GitHub Pages Build
~~~~~~~~~~~~~~~~~~~~~~~~~~~

Test the full CI build process that builds all versions (WARNING: clones entire DART repo):

.. code-block:: bash

   pixi run api-docs-test-gh      # Build all versions
   pixi run api-docs-serve-gh     # Serve at http://localhost:8004
   pixi run api-docs-clean-gh     # Clean up

Build Consistency
~~~~~~~~~~~~~~~~~

The local build commands produce the same output as CI builds:

- ``pixi run docs-build`` → Same as Read the Docs
- ``pixi run api-docs-build`` → Same as GitHub Pages (single version)
- ``pixi run api-docs-test-gh`` → Same as GitHub Pages (all versions)

Configuration Files
-------------------

.. list-table::
   :header-rows: 1
   :widths: 40 60

   * - File
     - Purpose
   * - ``.readthedocs.yml``
     - Read the Docs build configuration
   * - ``docs/readthedocs/conf.py``
     - Sphinx config for main documentation
   * - ``docs/python_api/conf.py``
     - Sphinx config for standalone Python API
   * - ``scripts/build_docs.py``
     - Multi-version GitHub Pages builder
   * - ``scripts/docs_versions.txt``
     - List of versions to build for GitHub Pages
   * - ``.github/workflows/api_doc.yml``
     - GitHub Actions workflow for API docs
   * - ``pixi.toml``
     - Local build task definitions

Deployment
----------

Read the Docs
~~~~~~~~~~~~~

**Trigger:** Push to ``main`` branch or manual trigger from RTD dashboard

**Build Process:**

1. RTD reads ``.readthedocs.yml``
2. Installs dependencies from ``docs/readthedocs/requirements.txt``
3. Runs Sphinx on ``docs/readthedocs/``
4. Publishes to https://docs.dartsim.org

GitHub Pages
~~~~~~~~~~~~

**Trigger:**

- Push to ``main`` branch
- Scheduled (twice weekly)
- Manual workflow dispatch

**Build Process:**

1. GitHub Actions runs ``.github/workflows/api_doc.yml``
2. Executes ``scripts/build_docs.py build``
3. For each version in ``scripts/docs_versions.txt``:

   - Clones DART repository
   - Checks out version tag
   - Builds C++ docs with Doxygen
   - Builds Python docs with Sphinx

4. Deploys to ``gh-pages`` branch

Adding New Versions
-------------------

To add a new version to GitHub Pages:

1. **Tag the release:**

   .. code-block:: bash

      git tag v6.14.0
      git push origin v6.14.0

2. **Update version list:**

   Edit ``scripts/docs_versions.txt``:

   .. code-block:: text

      DART 6
      v6.14.0
      v6.13.2
      v6.12.2

3. **Commit and push:**

   .. code-block:: bash

      git commit -am "Add v6.14.0 to API documentation"
      git push origin main

GitHub Actions will automatically build and deploy:

- C++ API → ``v6.14.0/``
- Python API → ``v6.14.0-py/``

Troubleshooting
---------------

Python API is Empty on Read the Docs
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

**Cause:** dartpy module not available during RTD build

**Current Status:** Expected until dartpy wheels are published to PyPI

**Workaround:** Use GitHub Pages for Python API: https://dartsim.github.io/dart/v6.13.2-py/

**Future Fix:** Once dartpy is published to PyPI, RTD will be able to ``pip install dartpy`` and generate full API docs.

Python API is Empty Locally
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

**Cause:** PYTHONPATH not set correctly

**Fix:** Use the pixi commands which set PYTHONPATH automatically:

.. code-block:: bash

   pixi run docs-build        # For RTD-style docs
   pixi run api-docs-py       # For GitHub Pages-style docs

C++ API Not Available on Read the Docs
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

**Status:** By design - Read the Docs cannot build C++ code

**Solution:** C++ API is available on GitHub Pages: https://dartsim.github.io/dart/v6.13.2/

The main RTD documentation includes prominent links to the C++ API on GitHub Pages.

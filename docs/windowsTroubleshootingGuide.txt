Installation Guidelines on Windows 7 with Visual Studio (2010)

Unlike installation on its Unix-based OS counterparts, the Windows installation of DART requires some extra steps.
This document lays out steps and problems encountered while building on Windows 7 (64-bit) for Visual Studio 2010.
These are meant to be suggestions in case you run into issues; they are not necessarily solutions for all problems.

1. Building Third-Party Libraries
  a. General
	Be sure to build all third-party libraries using the same compiler/runtime (same version of Visual Studio) you intend to use for DART.
	All of the third-party libraries should have Visual Studio 2010 solutions available.
	Also be sure that you are compiling with the same Runtime Library flag (e.g. /MD for release builds, /MDD for debug builds).
  b. Release vs. Debug
	All libraries must be built in Release mode.
	If you ever plan to run DART in Debug mode, you must compile the Debug buils of the third party libraries (with the exception of GLUT).
  c. Naming Conventions
	With the exception of GLUT, all of our libraries are compiled to lib<library name>.lib/.dll.
	Debug versions are appended with a '_d' after the library name.
  d. Library Locations
	All static library (.lib) files should be placed in (repo)/thirdparty/lib.
	Any needed DLL files (e.g. libgflags.dll) can be placed in the System or System32 folder in the C drive.
	(A sample path is C:\Windows\System32.)
	An alternative is the bin folder for the Visual C/C++ compiler
	(A sample path is C:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\bin.)
  e. GLUT
    We use GLUT as our library for opening a window with an OpenGL context.
	If you do not already have GLUT present on your machine, you will need to build it (we provide version 3.7.6).
	Currently, the GLUT solution will compile, but it throw an error when it attempts to copy the .lib and .dll files to the appropriate folders.
	The libraries can be found in glut-3.7.6/lib/glut/(Debug|Release)/
	For glut32.lib, move this to the (repo)/thirdparty/lib directory.
	For glut32.dll, move this to C:/Windows/System (or System32) directory. 

2. SNOPT (remove me eventually)
  a. General
	Snopt is a Fortran library and must be compiled with a separate compiler into a library.
	As mentioned before, this is most easily achieved with Intel's Parallel Studio XE.
	You'll need to create a VisualFortran Static Library project and load the SNOPT source files into it.
	You should only need to build a static (.lib) library.
	This should be named 'snopt.lib' and placed in the third party library folder.
  b. Compile-time: missing gfortran.lib
	Remove this from the list of additional dependencies in Properties -> Config. Properties -> Linker -> Input -> Additional Dependencies.
	If SNOPT was compiled with Parallel Studio XE, you will then likely be asked for libraries such as 'ifconsol.lib'.
	These are located in the Intel compiler's 'lib' folder in Program Files.
	(A sample path is C:\Program Files (x86)\Intel\ComposerXE-2011\compiler\lib\ia32.)
	(You may either copy these into the third party lib folder or link this as an additional include directory).
	To link, modify Properties -> Config. Properties -> Linker -> General -> Additional Library Directories.
	If additional linker errors occur (e.g. LNK 4098) for duplicated methods, you may need to exclude libcmt.lib or msvcrt.lib.
	This can be done in Properties -> Config. Properties -> Linker -> Input -> Ignore Specific Default Libraries.
  c. Runtime Crashes
	Make sure that you have a fort.4 file present in the directory containing the Visual Studio project files.
	A sample fort.4 file lives in (repo)/bin.
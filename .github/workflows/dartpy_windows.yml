name: dartpy (windows)

on:
  push:
    branches:
      - "**"
  schedule:
    - cron: "0 0 * * *"

# This workflow will install Python dependencies, run tests and lint with a
# variety of Python versions. For more information see:
#   - https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions
#   - https://github.com/pypa/cibuildwheel/blob/main/examples/github-deploy.yml
jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]

    steps:
      - uses: actions/checkout@v3

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.12.0
        env:
          MACOSX_DEPLOYMENT_TARGET: 10.15
          DART_IN_CI: ON
          CMAKE_TOOLCHAIN_FILE: ${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  # TODO: Disabled because installing from source doesn't work when the deps are not
  # installed in the system
  # build_sdist:
  #   name: Build source distribution
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Build SDist
  #       run: pipx run build --sdist

  #     - uses: actions/upload-artifact@v3
  #       with:
  #         path: dist/*.tar.gz

  upload_pypi:
    # needs: [build_wheels, build_sdist]
    needs: [build_wheels]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    # upload to PyPI on every tag starting with 'release-'
    # if: github.event_name == 'push' && startsWith(github.ref, 'release-')
    # alternatively, to publish when a GitHub Release is created, use the following rule:
    # if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v3
        with:
          # unpacks default artifact into dist/
          # if `name: artifact` is omitted, the action will create extra parent dir
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@v1.6.4
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
          # To test: repository_url: https://test.pypi.org/legacy/

---
name: Publish dartpy

"on":
  push:
    branches:
      - "**"
    tags:
      - "v*.*.*" # Trigger on version tags (e.g., v7.0.0, v7.0.1)
    paths-ignore:
      - ".github/workflows/cache_*.yml"
      - "docker/dev/**"
  pull_request:
    branches:
      - "**"
    paths-ignore:
      - ".github/workflows/cache_*.yml"
      - "docker/dev/**"
  schedule:
    - cron: "0 10 * * 0,3"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_wheels:
    name: ${{ matrix.os }}-py${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    # Note: No manylinux container used. All platforms use pixi environments.
    # Linux wheels: auditwheel auto-detects manylinux tag based on glibc symbols.
    # macOS wheels: delocate bundles dylibs. Windows wheels: delvewheel bundles DLLs.
    strategy:
      fail-fast: false
      matrix:
        include:
          # Linux builds
          - os: ubuntu-latest
            python-version: "312"
          - os: ubuntu-latest
            python-version: "313"
            skip-on-commit: true
          - os: ubuntu-latest
            python-version: "314"
            skip-on-commit: true
          # macOS builds
          - os: macos-latest
            python-version: "312"
          - os: macos-latest
            python-version: "313"
            skip-on-commit: true
          - os: macos-latest
            python-version: "314"
            skip-on-commit: true
          # Windows builds
          - os: windows-latest
            python-version: "312"
          - os: windows-latest
            python-version: "313"
            skip-on-commit: true
          - os: windows-latest
            python-version: "314"
            skip-on-commit: true
    steps:
      - uses: actions/checkout@v5
        if: (matrix.skip-on-commit != true) || github.event_name == 'pull_request' || startsWith(github.ref, 'refs/tags/v')

      - uses: prefix-dev/setup-pixi@v0.9.2
        if: (matrix.skip-on-commit != true) || github.event_name == 'pull_request' || startsWith(github.ref, 'refs/tags/v')
        with:
          pixi-version: latest
          cache: true

      - name: Build wheel
        if: (matrix.skip-on-commit != true) || github.event_name == 'pull_request' || startsWith(github.ref, 'refs/tags/v')
        run: pixi run -e py${{ matrix.python-version }}-wheel wheel-build

      - name: Repair wheel
        if: (matrix.skip-on-commit != true) || github.event_name == 'pull_request' || startsWith(github.ref, 'refs/tags/v')
        run: pixi run -e py${{ matrix.python-version }}-wheel wheel-repair

      - name: Verify wheel
        if: (matrix.skip-on-commit != true) || github.event_name == 'pull_request' || startsWith(github.ref, 'refs/tags/v')
        run: pixi run -e py${{ matrix.python-version }}-wheel wheel-verify

      - name: Test wheel
        if: (matrix.skip-on-commit != true) || github.event_name == 'pull_request' || startsWith(github.ref, 'refs/tags/v')
        run: pixi run -e py${{ matrix.python-version }}-wheel wheel-test

      - uses: actions/upload-artifact@v5
        if: (matrix.skip-on-commit != true) || github.event_name == 'pull_request' || startsWith(github.ref, 'refs/tags/v')
        with:
          path: ./dist/*.whl
          name: ${{ matrix.os }}-py${{ matrix.python-version }}

  upload_pypi:
    needs: [build_wheels]
    runs-on: ubuntu-latest
    # Publish all tagged versions (stable and dev) to production PyPI
    # Examples: v7.0.0, v7.0.0.dev0, v7.0.0.alpha1, v7.0.0.beta1, v7.0.0.rc1
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/download-artifact@v5
        with:
          # unpacks default artifact into dist/
          # if `name: artifact` is omitted, the action will create extra parent dir
          # name: artifact
          path: dist
          merge-multiple: true

      - name: List files in dist
        run: ls -lR dist/

      - uses: pypa/gh-action-pypi-publish@v1.13.0
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
          skip-existing: true

# For most projects, this workflow file will not need changing; you simply need
# to commit it to your repository.
#
# You may wish to alter this file to override the set of languages analyzed,
# or to provide custom queries or build logic.
#
# ******** NOTE ********
# We have attempted to detect the languages in your repository. Please check
# the `language` matrix defined below to confirm you have the correct set of
# supported CodeQL languages.
#
name: "CodeQL"

on:
  push:
    branches: ["**"]
    paths-ignore:
      - "dart/gui/glut/detail/lodepng.*"
      - "dart/external/**"
  pull_request:
    # The branches below must be a subset of the branches above
    branches: ["main"]
    paths-ignore:
      - "dart/gui/glut/detail/lodepng.*"
      - "dart/external/**"
  schedule:
    - cron: "0 10 * * 6"

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: ["cpp", "python"]
        # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python', 'ruby' ]
        # Use only 'java' to analyze code written in Java, Kotlin or both
        # Use only 'javascript' to analyze code written in JavaScript, TypeScript or both
        # Learn more about CodeQL language support at https://aka.ms/codeql-docs/language-support

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Initializes the CodeQL tools for scanning.
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          # If you wish to specify custom queries, you can do so here or in a config file.
          # By default, queries listed here will override any specified in a config file.
          # Prefix the list here with "+" to use these queries and those in the config file.

          # Details on CodeQL's query packs refer to : https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs
          # queries: security-extended,security-and-quality

      # Autobuild attempts to build any compiled languages  (C/C++, C#, Go, or Java).
      # If this step fails, then you should remove it and run the build manually (see below)
      - name: Install Dependencies with cache (Cpp)
        uses: awalsh128/cache-apt-pkgs-action@master
        if: ${{ matrix.language == 'cpp' }}
        with:
          packages: build-essential clang clang-format-14 cmake curl doxygen gcovr git lcov lsb-release pkg-config software-properties-common valgrind libassimp-dev libccd-dev libeigen3-dev libfcl-dev libfmt-dev coinor-libipopt-dev freeglut3-dev libxi-dev libxmu-dev libbullet-dev libtinyxml2-dev liburdfdom-dev liburdfdom-headers-dev libopenscenegraph-dev libnlopt-cxx-dev liboctomap-dev libode-dev libspdlog-dev ocl-icd-opencl-dev libpython3-dev pybind11-dev python3 python3-dev python3-distutils python3-numpy python3-pip python3-setuptools
          version: 1.0

      - name: Install More Dependencies (Cpp)
        if: ${{ matrix.language == 'cpp' }}
        run: |
          pip3 install pytest -U

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      # ‚ÑπÔ∏è Command-line programs to run using the OS shell.
      # üìö See https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstepsrun

      #   If the Autobuild fails above, remove it and uncomment the following three lines.
      #   modify them (or add more) to build your code if your project, please refer to the EXAMPLE below for guidance.

      # - run: |
      #   echo "Run, Build Application using script"
      #   ./location_of_script_within_repo/buildscript.sh

      # Perform analysis
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{matrix.language}}"
          upload: False # disable the upload here, since we will upload in a separate step
          output: sarif-results

      # Filter out the results that we don't want to upload
      - name: filter-sarif
        uses: advanced-security/filter-sarif@v1
        with:
          patterns: |
            -dart/gui/glut/detail/lodepng.*
            -dart/external/**
          input: sarif-results/${{ matrix.language }}.sarif
          output: sarif-results/${{ matrix.language }}.sarif

      # Upload the SARIF file as a build artifact
      - name: Upload SARIF
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: sarif-results/${{ matrix.language }}.sarif

      # (optional) uploaded sarif for debugging the filter-sarif action
      - name: Upload loc as a Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: sarif-results
          path: sarif-results
          retention-days: 1

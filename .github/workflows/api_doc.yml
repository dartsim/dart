# https://help.github.com/en/articles/workflow-syntax-for-github-actions

name: API Documentation

on:
  push:
    branches:
      - "**"
    paths-ignore:
      - ".github/workflows/cache_*.yml"
      - "docker/dev/**"
  pull_request:
    branches:
      - "**"
    paths-ignore:
      - ".github/workflows/cache_*.yml"
      - "docker/dev/**"
  schedule:
    # Cron syntax: [minute hour day_of_the_month month day_of_the_week]
    - cron: "0 2 * * 0,3" # Run every Sunday and Wednesday at 02:00
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build:
    name: API Documentation
    runs-on: ubuntu-latest
    env:
      BUILD_TYPE: Release
      COMPILER: gcc
      BUILD_DOCS: ON
    steps:
      # Extract branch name
      - name: Extract branch name
        if: github.event_name != 'pull_request'
        shell: bash
        run: echo "BRANCH_NAME=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
        id: extract_branch

      # Extract branch name on pull request
      - name: Print branch name
        if: github.event_name == 'pull_request'
        run: echo "BRANCH_NAME=${GITHUB_HEAD_REF}" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v5

      - name: Prework for installing packages using cache
        run: |
          sudo apt update
          sudo apt install -y cmake

      - name: Install Dependencies with cache
        uses: awalsh128/cache-apt-pkgs-action@v1.5.3
        with:
          packages: >
            build-essential
            libboost-all-dev
            clang
            clang-format-14
            cmake
            curl
            doxygen
            gcovr
            git
            lcov
            lsb-release
            pkg-config
            software-properties-common
            valgrind
            libassimp-dev
            libeigen3-dev
            libfcl-dev
            libfmt-dev
            coinor-libipopt-dev
            freeglut3-dev
            libxi-dev
            libxmu-dev
            libbullet-dev
            libtinyxml2-dev
            liburdfdom-dev
            liburdfdom-headers-dev
            libopenscenegraph-dev
            libnlopt-cxx-dev
            liboctomap-dev
            libode-dev
            libspdlog-dev
            ocl-icd-opencl-dev
            libpython3-dev
            pybind11-dev
            python3
            python3-dev
            python3-numpy
            python3-pip
            python3-setuptools
          version: 1.2

      - name: Install Python dependencies
        run: |
          pip3 install -U pytest sphinx sphinx_rtd_theme pyyaml

      - name: Build Documentation
        run: |
          python3 scripts/build_docs.py build

      - name: Upload documentation artifact
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: actions/upload-pages-artifact@v4
        with:
          path: gh-pages

      - name: Cleanup
        if: always()
        run: |
          python3 scripts/build_docs.py clean

  deploy:
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Configure GitHub Pages
        uses: actions/configure-pages@v5

      - name: Deploy
        id: deployment
        uses: actions/deploy-pages@v4
